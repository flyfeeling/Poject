// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Battle.proto

#include "Msg_Battle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ClientLoginGsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientLoginGsReq>
      _instance;
} _ClientLoginGsReq_default_instance_;
class ClientLoginGsAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientLoginGsAck>
      _instance;
} _ClientLoginGsAck_default_instance_;
class CreateRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomReq>
      _instance;
} _CreateRoomReq_default_instance_;
class CreateRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomAck>
      _instance;
} _CreateRoomAck_default_instance_;
class ReadyToBattleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadyToBattleReq>
      _instance;
} _ReadyToBattleReq_default_instance_;
class ReadyToBattleAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadyToBattleAck>
      _instance;
} _ReadyToBattleAck_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position>
      _instance;
} _Position_default_instance_;
class FindPathReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FindPathReq>
      _instance;
} _FindPathReq_default_instance_;
class FindPathAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FindPathAck>
      _instance;
} _FindPathAck_default_instance_;
namespace protobuf_Msg_5fBattle_2eproto {
void InitDefaultsClientLoginGsReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ClientLoginGsReq_default_instance_;
    new (ptr) ::ClientLoginGsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientLoginGsReq::InitAsDefaultInstance();
}

void InitDefaultsClientLoginGsReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientLoginGsReqImpl);
}

void InitDefaultsClientLoginGsAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ClientLoginGsAck_default_instance_;
    new (ptr) ::ClientLoginGsAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientLoginGsAck::InitAsDefaultInstance();
}

void InitDefaultsClientLoginGsAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientLoginGsAckImpl);
}

void InitDefaultsCreateRoomReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CreateRoomReq_default_instance_;
    new (ptr) ::CreateRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateRoomReq::InitAsDefaultInstance();
}

void InitDefaultsCreateRoomReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoomReqImpl);
}

void InitDefaultsCreateRoomAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_CreateRoomAck_default_instance_;
    new (ptr) ::CreateRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::CreateRoomAck::InitAsDefaultInstance();
}

void InitDefaultsCreateRoomAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateRoomAckImpl);
}

void InitDefaultsReadyToBattleReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ReadyToBattleReq_default_instance_;
    new (ptr) ::ReadyToBattleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReadyToBattleReq::InitAsDefaultInstance();
}

void InitDefaultsReadyToBattleReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadyToBattleReqImpl);
}

void InitDefaultsReadyToBattleAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_ReadyToBattleAck_default_instance_;
    new (ptr) ::ReadyToBattleAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ReadyToBattleAck::InitAsDefaultInstance();
}

void InitDefaultsReadyToBattleAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReadyToBattleAckImpl);
}

void InitDefaultsPositionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_Position_default_instance_;
    new (ptr) ::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Position::InitAsDefaultInstance();
}

void InitDefaultsPosition() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPositionImpl);
}

void InitDefaultsFindPathReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fBattle_2eproto::InitDefaultsPosition();
  {
    void* ptr = &::_FindPathReq_default_instance_;
    new (ptr) ::FindPathReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FindPathReq::InitAsDefaultInstance();
}

void InitDefaultsFindPathReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFindPathReqImpl);
}

void InitDefaultsFindPathAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fBattle_2eproto::InitDefaultsPosition();
  {
    void* ptr = &::_FindPathAck_default_instance_;
    new (ptr) ::FindPathAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FindPathAck::InitAsDefaultInstance();
}

void InitDefaultsFindPathAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFindPathAckImpl);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientLoginGsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientLoginGsReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientLoginGsAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientLoginGsAck, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomReq, mapid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::CreateRoomAck, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadyToBattleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadyToBattleReq, battletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadyToBattleReq, robotcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadyToBattleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadyToBattleAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ReadyToBattleAck, roleid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Position, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Position, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Position, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FindPathReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FindPathReq, spos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FindPathReq, epos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FindPathAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FindPathAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FindPathAck, paths_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ClientLoginGsReq)},
  { 6, -1, sizeof(::ClientLoginGsAck)},
  { 12, -1, sizeof(::CreateRoomReq)},
  { 18, -1, sizeof(::CreateRoomAck)},
  { 25, -1, sizeof(::ReadyToBattleReq)},
  { 32, -1, sizeof(::ReadyToBattleAck)},
  { 39, -1, sizeof(::Position)},
  { 47, -1, sizeof(::FindPathReq)},
  { 54, -1, sizeof(::FindPathAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientLoginGsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientLoginGsAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_CreateRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReadyToBattleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ReadyToBattleAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FindPathReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FindPathAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_Battle.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020Msg_Battle.proto\"%\n\020ClientLoginGsReq\022\021"
      "\n\taccountId\030\001 \001(\r\"#\n\020ClientLoginGsAck\022\017\n"
      "\007retCode\030\001 \001(\005\"\036\n\rCreateRoomReq\022\r\n\005mapid"
      "\030\001 \001(\005\"0\n\rCreateRoomAck\022\017\n\007retCode\030\001 \001(\005"
      "\022\016\n\006roomid\030\002 \001(\r\":\n\020ReadyToBattleReq\022\022\n\n"
      "battleType\030\001 \001(\005\022\022\n\nrobotCount\030\002 \001(\005\"3\n\020"
      "ReadyToBattleAck\022\017\n\007retCode\030\001 \001(\005\022\016\n\006rol"
      "eid\030\002 \003(\r\"+\n\010Position\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 "
      "\001(\002\022\t\n\001z\030\003 \001(\002\"\?\n\013FindPathReq\022\027\n\004spos\030\001 "
      "\001(\0132\t.Position\022\027\n\004epos\030\002 \001(\0132\t.Position\""
      "8\n\013FindPathAck\022\017\n\007retCode\030\001 \001(\005\022\030\n\005paths"
      "\030\002 \003(\0132\t.Position*3\n\nBattleType\022\021\n\rT_Bat"
      "tle_None\020\000\022\022\n\016T_Battle_Robot\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 518);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_Battle.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Msg_5fBattle_2eproto
const ::google::protobuf::EnumDescriptor* BattleType_descriptor() {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fBattle_2eproto::file_level_enum_descriptors[0];
}
bool BattleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClientLoginGsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLoginGsReq::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLoginGsReq::ClientLoginGsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsClientLoginGsReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLoginGsReq)
}
ClientLoginGsReq::ClientLoginGsReq(const ClientLoginGsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:ClientLoginGsReq)
}

void ClientLoginGsReq::SharedCtor() {
  accountid_ = 0u;
  _cached_size_ = 0;
}

ClientLoginGsReq::~ClientLoginGsReq() {
  // @@protoc_insertion_point(destructor:ClientLoginGsReq)
  SharedDtor();
}

void ClientLoginGsReq::SharedDtor() {
}

void ClientLoginGsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientLoginGsReq::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientLoginGsReq& ClientLoginGsReq::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsClientLoginGsReq();
  return *internal_default_instance();
}

ClientLoginGsReq* ClientLoginGsReq::New(::google::protobuf::Arena* arena) const {
  ClientLoginGsReq* n = new ClientLoginGsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientLoginGsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLoginGsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accountid_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientLoginGsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLoginGsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 accountId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLoginGsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLoginGsReq)
  return false;
#undef DO_
}

void ClientLoginGsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLoginGsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 accountId = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLoginGsReq)
}

::google::protobuf::uint8* ClientLoginGsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLoginGsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 accountId = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLoginGsReq)
  return target;
}

size_t ClientLoginGsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLoginGsReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 accountId = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientLoginGsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLoginGsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLoginGsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLoginGsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLoginGsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLoginGsReq)
    MergeFrom(*source);
  }
}

void ClientLoginGsReq::MergeFrom(const ClientLoginGsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLoginGsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void ClientLoginGsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLoginGsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLoginGsReq::CopyFrom(const ClientLoginGsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLoginGsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLoginGsReq::IsInitialized() const {
  return true;
}

void ClientLoginGsReq::Swap(ClientLoginGsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLoginGsReq::InternalSwap(ClientLoginGsReq* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientLoginGsReq::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientLoginGsAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientLoginGsAck::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientLoginGsAck::ClientLoginGsAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsClientLoginGsAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLoginGsAck)
}
ClientLoginGsAck::ClientLoginGsAck(const ClientLoginGsAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:ClientLoginGsAck)
}

void ClientLoginGsAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ClientLoginGsAck::~ClientLoginGsAck() {
  // @@protoc_insertion_point(destructor:ClientLoginGsAck)
  SharedDtor();
}

void ClientLoginGsAck::SharedDtor() {
}

void ClientLoginGsAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientLoginGsAck::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientLoginGsAck& ClientLoginGsAck::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsClientLoginGsAck();
  return *internal_default_instance();
}

ClientLoginGsAck* ClientLoginGsAck::New(::google::protobuf::Arena* arena) const {
  ClientLoginGsAck* n = new ClientLoginGsAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientLoginGsAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLoginGsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ClientLoginGsAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLoginGsAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLoginGsAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLoginGsAck)
  return false;
#undef DO_
}

void ClientLoginGsAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLoginGsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLoginGsAck)
}

::google::protobuf::uint8* ClientLoginGsAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLoginGsAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLoginGsAck)
  return target;
}

size_t ClientLoginGsAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLoginGsAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientLoginGsAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLoginGsAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientLoginGsAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientLoginGsAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLoginGsAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLoginGsAck)
    MergeFrom(*source);
  }
}

void ClientLoginGsAck::MergeFrom(const ClientLoginGsAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLoginGsAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ClientLoginGsAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLoginGsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientLoginGsAck::CopyFrom(const ClientLoginGsAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLoginGsAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientLoginGsAck::IsInitialized() const {
  return true;
}

void ClientLoginGsAck::Swap(ClientLoginGsAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientLoginGsAck::InternalSwap(ClientLoginGsAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientLoginGsAck::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomReq::kMapidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomReq::CreateRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsCreateRoomReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRoomReq)
}
CreateRoomReq::CreateRoomReq(const CreateRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mapid_ = from.mapid_;
  // @@protoc_insertion_point(copy_constructor:CreateRoomReq)
}

void CreateRoomReq::SharedCtor() {
  mapid_ = 0;
  _cached_size_ = 0;
}

CreateRoomReq::~CreateRoomReq() {
  // @@protoc_insertion_point(destructor:CreateRoomReq)
  SharedDtor();
}

void CreateRoomReq::SharedDtor() {
}

void CreateRoomReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomReq::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomReq& CreateRoomReq::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsCreateRoomReq();
  return *internal_default_instance();
}

CreateRoomReq* CreateRoomReq::New(::google::protobuf::Arena* arena) const {
  CreateRoomReq* n = new CreateRoomReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mapid_ = 0;
  _internal_metadata_.Clear();
}

bool CreateRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRoomReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 mapid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mapid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRoomReq)
  return false;
#undef DO_
}

void CreateRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mapid = 1;
  if (this->mapid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mapid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRoomReq)
}

::google::protobuf::uint8* CreateRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 mapid = 1;
  if (this->mapid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mapid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRoomReq)
  return target;
}

size_t CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 mapid = 1;
  if (this->mapid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mapid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRoomReq)
    MergeFrom(*source);
  }
}

void CreateRoomReq::MergeFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mapid() != 0) {
    set_mapid(from.mapid());
  }
}

void CreateRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomReq::CopyFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomReq::IsInitialized() const {
  return true;
}

void CreateRoomReq::Swap(CreateRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomReq::InternalSwap(CreateRoomReq* other) {
  using std::swap;
  swap(mapid_, other->mapid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomReq::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomAck::kRetCodeFieldNumber;
const int CreateRoomAck::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomAck::CreateRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsCreateRoomAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRoomAck)
}
CreateRoomAck::CreateRoomAck(const CreateRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:CreateRoomAck)
}

void CreateRoomAck::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(roomid_));
  _cached_size_ = 0;
}

CreateRoomAck::~CreateRoomAck() {
  // @@protoc_insertion_point(destructor:CreateRoomAck)
  SharedDtor();
}

void CreateRoomAck::SharedDtor() {
}

void CreateRoomAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoomAck::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomAck& CreateRoomAck::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsCreateRoomAck();
  return *internal_default_instance();
}

CreateRoomAck* CreateRoomAck::New(::google::protobuf::Arena* arena) const {
  CreateRoomAck* n = new CreateRoomAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(roomid_));
  _internal_metadata_.Clear();
}

bool CreateRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRoomAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRoomAck)
  return false;
#undef DO_
}

void CreateRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRoomAck)
}

::google::protobuf::uint8* CreateRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRoomAck)
  return target;
}

size_t CreateRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRoomAck)
    MergeFrom(*source);
  }
}

void CreateRoomAck::MergeFrom(const CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void CreateRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomAck::CopyFrom(const CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomAck::IsInitialized() const {
  return true;
}

void CreateRoomAck::Swap(CreateRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomAck::InternalSwap(CreateRoomAck* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoomAck::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadyToBattleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadyToBattleReq::kBattleTypeFieldNumber;
const int ReadyToBattleReq::kRobotCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadyToBattleReq::ReadyToBattleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsReadyToBattleReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReadyToBattleReq)
}
ReadyToBattleReq::ReadyToBattleReq(const ReadyToBattleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&battletype_, &from.battletype_,
    static_cast<size_t>(reinterpret_cast<char*>(&robotcount_) -
    reinterpret_cast<char*>(&battletype_)) + sizeof(robotcount_));
  // @@protoc_insertion_point(copy_constructor:ReadyToBattleReq)
}

void ReadyToBattleReq::SharedCtor() {
  ::memset(&battletype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robotcount_) -
      reinterpret_cast<char*>(&battletype_)) + sizeof(robotcount_));
  _cached_size_ = 0;
}

ReadyToBattleReq::~ReadyToBattleReq() {
  // @@protoc_insertion_point(destructor:ReadyToBattleReq)
  SharedDtor();
}

void ReadyToBattleReq::SharedDtor() {
}

void ReadyToBattleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadyToBattleReq::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadyToBattleReq& ReadyToBattleReq::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsReadyToBattleReq();
  return *internal_default_instance();
}

ReadyToBattleReq* ReadyToBattleReq::New(::google::protobuf::Arena* arena) const {
  ReadyToBattleReq* n = new ReadyToBattleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadyToBattleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ReadyToBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&battletype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&robotcount_) -
      reinterpret_cast<char*>(&battletype_)) + sizeof(robotcount_));
  _internal_metadata_.Clear();
}

bool ReadyToBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReadyToBattleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 battleType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 robotCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robotcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReadyToBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReadyToBattleReq)
  return false;
#undef DO_
}

void ReadyToBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReadyToBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 battleType = 1;
  if (this->battletype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->battletype(), output);
  }

  // int32 robotCount = 2;
  if (this->robotcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->robotcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReadyToBattleReq)
}

::google::protobuf::uint8* ReadyToBattleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReadyToBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 battleType = 1;
  if (this->battletype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->battletype(), target);
  }

  // int32 robotCount = 2;
  if (this->robotcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->robotcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReadyToBattleReq)
  return target;
}

size_t ReadyToBattleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReadyToBattleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 battleType = 1;
  if (this->battletype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battletype());
  }

  // int32 robotCount = 2;
  if (this->robotcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robotcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadyToBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReadyToBattleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadyToBattleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadyToBattleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReadyToBattleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReadyToBattleReq)
    MergeFrom(*source);
  }
}

void ReadyToBattleReq::MergeFrom(const ReadyToBattleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReadyToBattleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.battletype() != 0) {
    set_battletype(from.battletype());
  }
  if (from.robotcount() != 0) {
    set_robotcount(from.robotcount());
  }
}

void ReadyToBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReadyToBattleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadyToBattleReq::CopyFrom(const ReadyToBattleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReadyToBattleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyToBattleReq::IsInitialized() const {
  return true;
}

void ReadyToBattleReq::Swap(ReadyToBattleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadyToBattleReq::InternalSwap(ReadyToBattleReq* other) {
  using std::swap;
  swap(battletype_, other->battletype_);
  swap(robotcount_, other->robotcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadyToBattleReq::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadyToBattleAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadyToBattleAck::kRetCodeFieldNumber;
const int ReadyToBattleAck::kRoleidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadyToBattleAck::ReadyToBattleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsReadyToBattleAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReadyToBattleAck)
}
ReadyToBattleAck::ReadyToBattleAck(const ReadyToBattleAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roleid_(from.roleid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:ReadyToBattleAck)
}

void ReadyToBattleAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ReadyToBattleAck::~ReadyToBattleAck() {
  // @@protoc_insertion_point(destructor:ReadyToBattleAck)
  SharedDtor();
}

void ReadyToBattleAck::SharedDtor() {
}

void ReadyToBattleAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadyToBattleAck::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadyToBattleAck& ReadyToBattleAck::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsReadyToBattleAck();
  return *internal_default_instance();
}

ReadyToBattleAck* ReadyToBattleAck::New(::google::protobuf::Arena* arena) const {
  ReadyToBattleAck* n = new ReadyToBattleAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadyToBattleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:ReadyToBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roleid_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ReadyToBattleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReadyToBattleAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 roleid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_roleid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_roleid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReadyToBattleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReadyToBattleAck)
  return false;
#undef DO_
}

void ReadyToBattleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReadyToBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint32 roleid = 2;
  if (this->roleid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _roleid_cached_byte_size_));
  }
  for (int i = 0, n = this->roleid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->roleid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ReadyToBattleAck)
}

::google::protobuf::uint8* ReadyToBattleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ReadyToBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 roleid = 2;
  if (this->roleid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _roleid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->roleid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReadyToBattleAck)
  return target;
}

size_t ReadyToBattleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ReadyToBattleAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 roleid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->roleid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roleid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadyToBattleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ReadyToBattleAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadyToBattleAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadyToBattleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ReadyToBattleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ReadyToBattleAck)
    MergeFrom(*source);
  }
}

void ReadyToBattleAck::MergeFrom(const ReadyToBattleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ReadyToBattleAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roleid_.MergeFrom(from.roleid_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ReadyToBattleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ReadyToBattleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadyToBattleAck::CopyFrom(const ReadyToBattleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ReadyToBattleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadyToBattleAck::IsInitialized() const {
  return true;
}

void ReadyToBattleAck::Swap(ReadyToBattleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadyToBattleAck::InternalSwap(ReadyToBattleAck* other) {
  using std::swap;
  roleid_.InternalSwap(&other->roleid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadyToBattleAck::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
const int Position::kYFieldNumber;
const int Position::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsPosition();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Position)
}

void Position::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:Position)
  SharedDtor();
}

void Position::SharedDtor() {
}

void Position::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsPosition();
  return *internal_default_instance();
}

Position* Position::New(::google::protobuf::Arena* arena) const {
  Position* n = new Position;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Position)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FindPathReq::InitAsDefaultInstance() {
  ::_FindPathReq_default_instance_._instance.get_mutable()->spos_ = const_cast< ::Position*>(
      ::Position::internal_default_instance());
  ::_FindPathReq_default_instance_._instance.get_mutable()->epos_ = const_cast< ::Position*>(
      ::Position::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FindPathReq::kSposFieldNumber;
const int FindPathReq::kEposFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FindPathReq::FindPathReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsFindPathReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FindPathReq)
}
FindPathReq::FindPathReq(const FindPathReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_spos()) {
    spos_ = new ::Position(*from.spos_);
  } else {
    spos_ = NULL;
  }
  if (from.has_epos()) {
    epos_ = new ::Position(*from.epos_);
  } else {
    epos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:FindPathReq)
}

void FindPathReq::SharedCtor() {
  ::memset(&spos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epos_) -
      reinterpret_cast<char*>(&spos_)) + sizeof(epos_));
  _cached_size_ = 0;
}

FindPathReq::~FindPathReq() {
  // @@protoc_insertion_point(destructor:FindPathReq)
  SharedDtor();
}

void FindPathReq::SharedDtor() {
  if (this != internal_default_instance()) delete spos_;
  if (this != internal_default_instance()) delete epos_;
}

void FindPathReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FindPathReq::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FindPathReq& FindPathReq::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsFindPathReq();
  return *internal_default_instance();
}

FindPathReq* FindPathReq::New(::google::protobuf::Arena* arena) const {
  FindPathReq* n = new FindPathReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FindPathReq::Clear() {
// @@protoc_insertion_point(message_clear_start:FindPathReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && spos_ != NULL) {
    delete spos_;
  }
  spos_ = NULL;
  if (GetArenaNoVirtual() == NULL && epos_ != NULL) {
    delete epos_;
  }
  epos_ = NULL;
  _internal_metadata_.Clear();
}

bool FindPathReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FindPathReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Position spos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_spos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Position epos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_epos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FindPathReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FindPathReq)
  return false;
#undef DO_
}

void FindPathReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FindPathReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Position spos = 1;
  if (this->has_spos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->spos_, output);
  }

  // .Position epos = 2;
  if (this->has_epos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->epos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FindPathReq)
}

::google::protobuf::uint8* FindPathReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FindPathReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Position spos = 1;
  if (this->has_spos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->spos_, deterministic, target);
  }

  // .Position epos = 2;
  if (this->has_epos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->epos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FindPathReq)
  return target;
}

size_t FindPathReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FindPathReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Position spos = 1;
  if (this->has_spos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->spos_);
  }

  // .Position epos = 2;
  if (this->has_epos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->epos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FindPathReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FindPathReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPathReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FindPathReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FindPathReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FindPathReq)
    MergeFrom(*source);
  }
}

void FindPathReq::MergeFrom(const FindPathReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FindPathReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_spos()) {
    mutable_spos()->::Position::MergeFrom(from.spos());
  }
  if (from.has_epos()) {
    mutable_epos()->::Position::MergeFrom(from.epos());
  }
}

void FindPathReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FindPathReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPathReq::CopyFrom(const FindPathReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FindPathReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathReq::IsInitialized() const {
  return true;
}

void FindPathReq::Swap(FindPathReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FindPathReq::InternalSwap(FindPathReq* other) {
  using std::swap;
  swap(spos_, other->spos_);
  swap(epos_, other->epos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FindPathReq::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FindPathAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FindPathAck::kRetCodeFieldNumber;
const int FindPathAck::kPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FindPathAck::FindPathAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fBattle_2eproto::InitDefaultsFindPathAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FindPathAck)
}
FindPathAck::FindPathAck(const FindPathAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paths_(from.paths_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:FindPathAck)
}

void FindPathAck::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

FindPathAck::~FindPathAck() {
  // @@protoc_insertion_point(destructor:FindPathAck)
  SharedDtor();
}

void FindPathAck::SharedDtor() {
}

void FindPathAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FindPathAck::descriptor() {
  ::protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FindPathAck& FindPathAck::default_instance() {
  ::protobuf_Msg_5fBattle_2eproto::InitDefaultsFindPathAck();
  return *internal_default_instance();
}

FindPathAck* FindPathAck::New(::google::protobuf::Arena* arena) const {
  FindPathAck* n = new FindPathAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FindPathAck::Clear() {
// @@protoc_insertion_point(message_clear_start:FindPathAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool FindPathAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FindPathAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Position paths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FindPathAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FindPathAck)
  return false;
#undef DO_
}

void FindPathAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FindPathAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .Position paths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->paths(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FindPathAck)
}

::google::protobuf::uint8* FindPathAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FindPathAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .Position paths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->paths(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FindPathAck)
  return target;
}

size_t FindPathAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FindPathAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Position paths = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->paths(static_cast<int>(i)));
    }
  }

  // int32 retCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FindPathAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FindPathAck)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPathAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FindPathAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FindPathAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FindPathAck)
    MergeFrom(*source);
  }
}

void FindPathAck::MergeFrom(const FindPathAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FindPathAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void FindPathAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FindPathAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPathAck::CopyFrom(const FindPathAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FindPathAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathAck::IsInitialized() const {
  return true;
}

void FindPathAck::Swap(FindPathAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FindPathAck::InternalSwap(FindPathAck* other) {
  using std::swap;
  paths_.InternalSwap(&other->paths_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FindPathAck::GetMetadata() const {
  protobuf_Msg_5fBattle_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fBattle_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
