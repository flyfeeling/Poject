// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_LogicServer.proto

#ifndef PROTOBUF_Msg_5fLogicServer_2eproto__INCLUDED
#define PROTOBUF_Msg_5fLogicServer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Msg_5fLogicServer_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRoleItemImpl();
void InitDefaultsRoleItem();
void InitDefaultsRoleListReqImpl();
void InitDefaultsRoleListReq();
void InitDefaultsRoleListAckImpl();
void InitDefaultsRoleListAck();
void InitDefaultsRoleCreateReqImpl();
void InitDefaultsRoleCreateReq();
void InitDefaultsRoleCreateAckImpl();
void InitDefaultsRoleCreateAck();
void InitDefaultsRoleDeleteReqImpl();
void InitDefaultsRoleDeleteReq();
void InitDefaultsRoleDeleteAckImpl();
void InitDefaultsRoleDeleteAck();
void InitDefaultsRoleLoginReqImpl();
void InitDefaultsRoleLoginReq();
void InitDefaultsRoleLogoutReqImpl();
void InitDefaultsRoleLogoutReq();
void InitDefaultsRoleLogoutAckImpl();
void InitDefaultsRoleLogoutAck();
void InitDefaultsRoleDisconnectReqImpl();
void InitDefaultsRoleDisconnectReq();
void InitDefaultsRoleDisconnectAckImpl();
void InitDefaultsRoleDisconnectAck();
void InitDefaultsRoleReconnectReqImpl();
void InitDefaultsRoleReconnectReq();
void InitDefaultsRoleReconnectAckImpl();
void InitDefaultsRoleReconnectAck();
void InitDefaultsBroadMessageNotifyImpl();
void InitDefaultsBroadMessageNotify();
void InitDefaultsChatMessageReqImpl();
void InitDefaultsChatMessageReq();
void InitDefaultsChatMessageAckImpl();
void InitDefaultsChatMessageAck();
void InitDefaultsChatMessageNtyImpl();
void InitDefaultsChatMessageNty();
inline void InitDefaults() {
  InitDefaultsRoleItem();
  InitDefaultsRoleListReq();
  InitDefaultsRoleListAck();
  InitDefaultsRoleCreateReq();
  InitDefaultsRoleCreateAck();
  InitDefaultsRoleDeleteReq();
  InitDefaultsRoleDeleteAck();
  InitDefaultsRoleLoginReq();
  InitDefaultsRoleLogoutReq();
  InitDefaultsRoleLogoutAck();
  InitDefaultsRoleDisconnectReq();
  InitDefaultsRoleDisconnectAck();
  InitDefaultsRoleReconnectReq();
  InitDefaultsRoleReconnectAck();
  InitDefaultsBroadMessageNotify();
  InitDefaultsChatMessageReq();
  InitDefaultsChatMessageAck();
  InitDefaultsChatMessageNty();
}
}  // namespace protobuf_Msg_5fLogicServer_2eproto
class BroadMessageNotify;
class BroadMessageNotifyDefaultTypeInternal;
extern BroadMessageNotifyDefaultTypeInternal _BroadMessageNotify_default_instance_;
class ChatMessageAck;
class ChatMessageAckDefaultTypeInternal;
extern ChatMessageAckDefaultTypeInternal _ChatMessageAck_default_instance_;
class ChatMessageNty;
class ChatMessageNtyDefaultTypeInternal;
extern ChatMessageNtyDefaultTypeInternal _ChatMessageNty_default_instance_;
class ChatMessageReq;
class ChatMessageReqDefaultTypeInternal;
extern ChatMessageReqDefaultTypeInternal _ChatMessageReq_default_instance_;
class RoleCreateAck;
class RoleCreateAckDefaultTypeInternal;
extern RoleCreateAckDefaultTypeInternal _RoleCreateAck_default_instance_;
class RoleCreateReq;
class RoleCreateReqDefaultTypeInternal;
extern RoleCreateReqDefaultTypeInternal _RoleCreateReq_default_instance_;
class RoleDeleteAck;
class RoleDeleteAckDefaultTypeInternal;
extern RoleDeleteAckDefaultTypeInternal _RoleDeleteAck_default_instance_;
class RoleDeleteReq;
class RoleDeleteReqDefaultTypeInternal;
extern RoleDeleteReqDefaultTypeInternal _RoleDeleteReq_default_instance_;
class RoleDisconnectAck;
class RoleDisconnectAckDefaultTypeInternal;
extern RoleDisconnectAckDefaultTypeInternal _RoleDisconnectAck_default_instance_;
class RoleDisconnectReq;
class RoleDisconnectReqDefaultTypeInternal;
extern RoleDisconnectReqDefaultTypeInternal _RoleDisconnectReq_default_instance_;
class RoleItem;
class RoleItemDefaultTypeInternal;
extern RoleItemDefaultTypeInternal _RoleItem_default_instance_;
class RoleListAck;
class RoleListAckDefaultTypeInternal;
extern RoleListAckDefaultTypeInternal _RoleListAck_default_instance_;
class RoleListReq;
class RoleListReqDefaultTypeInternal;
extern RoleListReqDefaultTypeInternal _RoleListReq_default_instance_;
class RoleLoginReq;
class RoleLoginReqDefaultTypeInternal;
extern RoleLoginReqDefaultTypeInternal _RoleLoginReq_default_instance_;
class RoleLogoutAck;
class RoleLogoutAckDefaultTypeInternal;
extern RoleLogoutAckDefaultTypeInternal _RoleLogoutAck_default_instance_;
class RoleLogoutReq;
class RoleLogoutReqDefaultTypeInternal;
extern RoleLogoutReqDefaultTypeInternal _RoleLogoutReq_default_instance_;
class RoleReconnectAck;
class RoleReconnectAckDefaultTypeInternal;
extern RoleReconnectAckDefaultTypeInternal _RoleReconnectAck_default_instance_;
class RoleReconnectReq;
class RoleReconnectReqDefaultTypeInternal;
extern RoleReconnectReqDefaultTypeInternal _RoleReconnectReq_default_instance_;

// ===================================================================

class RoleItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleItem) */ {
 public:
  RoleItem();
  virtual ~RoleItem();

  RoleItem(const RoleItem& from);

  inline RoleItem& operator=(const RoleItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleItem(RoleItem&& from) noexcept
    : RoleItem() {
    *this = ::std::move(from);
  }

  inline RoleItem& operator=(RoleItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleItem* internal_default_instance() {
    return reinterpret_cast<const RoleItem*>(
               &_RoleItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RoleItem* other);
  friend void swap(RoleItem& a, RoleItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleItem* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleItem& from);
  void MergeFrom(const RoleItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::uint64 roleid() const;
  void set_roleid(::google::protobuf::uint64 value);

  // int32 Carrer = 3;
  void clear_carrer();
  static const int kCarrerFieldNumber = 3;
  ::google::protobuf::int32 carrer() const;
  void set_carrer(::google::protobuf::int32 value);

  // int32 Level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 carrer_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleItemImpl();
};
// -------------------------------------------------------------------

class RoleListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleListReq) */ {
 public:
  RoleListReq();
  virtual ~RoleListReq();

  RoleListReq(const RoleListReq& from);

  inline RoleListReq& operator=(const RoleListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleListReq(RoleListReq&& from) noexcept
    : RoleListReq() {
    *this = ::std::move(from);
  }

  inline RoleListReq& operator=(RoleListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleListReq* internal_default_instance() {
    return reinterpret_cast<const RoleListReq*>(
               &_RoleListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RoleListReq* other);
  friend void swap(RoleListReq& a, RoleListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleListReq& from);
  void MergeFrom(const RoleListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // int32 LoginCode = 2;
  void clear_logincode();
  static const int kLoginCodeFieldNumber = 2;
  ::google::protobuf::int32 logincode() const;
  void set_logincode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::int32 logincode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleListReqImpl();
};
// -------------------------------------------------------------------

class RoleListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleListAck) */ {
 public:
  RoleListAck();
  virtual ~RoleListAck();

  RoleListAck(const RoleListAck& from);

  inline RoleListAck& operator=(const RoleListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleListAck(RoleListAck&& from) noexcept
    : RoleListAck() {
    *this = ::std::move(from);
  }

  inline RoleListAck& operator=(RoleListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleListAck* internal_default_instance() {
    return reinterpret_cast<const RoleListAck*>(
               &_RoleListAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RoleListAck* other);
  friend void swap(RoleListAck& a, RoleListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleListAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleListAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleListAck& from);
  void MergeFrom(const RoleListAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoleItem RoleList = 2;
  int rolelist_size() const;
  void clear_rolelist();
  static const int kRoleListFieldNumber = 2;
  const ::RoleItem& rolelist(int index) const;
  ::RoleItem* mutable_rolelist(int index);
  ::RoleItem* add_rolelist();
  ::google::protobuf::RepeatedPtrField< ::RoleItem >*
      mutable_rolelist();
  const ::google::protobuf::RepeatedPtrField< ::RoleItem >&
      rolelist() const;

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoleListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::RoleItem > rolelist_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleListAckImpl();
};
// -------------------------------------------------------------------

class RoleCreateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleCreateReq) */ {
 public:
  RoleCreateReq();
  virtual ~RoleCreateReq();

  RoleCreateReq(const RoleCreateReq& from);

  inline RoleCreateReq& operator=(const RoleCreateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleCreateReq(RoleCreateReq&& from) noexcept
    : RoleCreateReq() {
    *this = ::std::move(from);
  }

  inline RoleCreateReq& operator=(RoleCreateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleCreateReq* internal_default_instance() {
    return reinterpret_cast<const RoleCreateReq*>(
               &_RoleCreateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RoleCreateReq* other);
  friend void swap(RoleCreateReq& a, RoleCreateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleCreateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleCreateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleCreateReq& from);
  void MergeFrom(const RoleCreateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // int32 Carrer = 3;
  void clear_carrer();
  static const int kCarrerFieldNumber = 3;
  ::google::protobuf::int32 carrer() const;
  void set_carrer(::google::protobuf::int32 value);

  // int32 Channel = 4;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleCreateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::int32 carrer_;
  ::google::protobuf::int32 channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleCreateReqImpl();
};
// -------------------------------------------------------------------

class RoleCreateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleCreateAck) */ {
 public:
  RoleCreateAck();
  virtual ~RoleCreateAck();

  RoleCreateAck(const RoleCreateAck& from);

  inline RoleCreateAck& operator=(const RoleCreateAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleCreateAck(RoleCreateAck&& from) noexcept
    : RoleCreateAck() {
    *this = ::std::move(from);
  }

  inline RoleCreateAck& operator=(RoleCreateAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleCreateAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleCreateAck* internal_default_instance() {
    return reinterpret_cast<const RoleCreateAck*>(
               &_RoleCreateAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RoleCreateAck* other);
  friend void swap(RoleCreateAck& a, RoleCreateAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleCreateAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleCreateAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleCreateAck& from);
  void MergeFrom(const RoleCreateAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleCreateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Name = 4;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 RoleID = 3;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 3;
  ::google::protobuf::uint64 roleid() const;
  void set_roleid(::google::protobuf::uint64 value);

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // int32 Carrer = 5;
  void clear_carrer();
  static const int kCarrerFieldNumber = 5;
  ::google::protobuf::int32 carrer() const;
  void set_carrer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleCreateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::int32 carrer_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleCreateAckImpl();
};
// -------------------------------------------------------------------

class RoleDeleteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDeleteReq) */ {
 public:
  RoleDeleteReq();
  virtual ~RoleDeleteReq();

  RoleDeleteReq(const RoleDeleteReq& from);

  inline RoleDeleteReq& operator=(const RoleDeleteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleDeleteReq(RoleDeleteReq&& from) noexcept
    : RoleDeleteReq() {
    *this = ::std::move(from);
  }

  inline RoleDeleteReq& operator=(RoleDeleteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDeleteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleDeleteReq* internal_default_instance() {
    return reinterpret_cast<const RoleDeleteReq*>(
               &_RoleDeleteReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(RoleDeleteReq* other);
  friend void swap(RoleDeleteReq& a, RoleDeleteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleDeleteReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDeleteReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDeleteReq& from);
  void MergeFrom(const RoleDeleteReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDeleteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::uint64 roleid() const;
  void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RoleDeleteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 roleid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleDeleteReqImpl();
};
// -------------------------------------------------------------------

class RoleDeleteAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDeleteAck) */ {
 public:
  RoleDeleteAck();
  virtual ~RoleDeleteAck();

  RoleDeleteAck(const RoleDeleteAck& from);

  inline RoleDeleteAck& operator=(const RoleDeleteAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleDeleteAck(RoleDeleteAck&& from) noexcept
    : RoleDeleteAck() {
    *this = ::std::move(from);
  }

  inline RoleDeleteAck& operator=(RoleDeleteAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDeleteAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleDeleteAck* internal_default_instance() {
    return reinterpret_cast<const RoleDeleteAck*>(
               &_RoleDeleteAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(RoleDeleteAck* other);
  friend void swap(RoleDeleteAck& a, RoleDeleteAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleDeleteAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDeleteAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDeleteAck& from);
  void MergeFrom(const RoleDeleteAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDeleteAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoleDeleteAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleDeleteAckImpl();
};
// -------------------------------------------------------------------

class RoleLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLoginReq) */ {
 public:
  RoleLoginReq();
  virtual ~RoleLoginReq();

  RoleLoginReq(const RoleLoginReq& from);

  inline RoleLoginReq& operator=(const RoleLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleLoginReq(RoleLoginReq&& from) noexcept
    : RoleLoginReq() {
    *this = ::std::move(from);
  }

  inline RoleLoginReq& operator=(RoleLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleLoginReq* internal_default_instance() {
    return reinterpret_cast<const RoleLoginReq*>(
               &_RoleLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RoleLoginReq* other);
  friend void swap(RoleLoginReq& a, RoleLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLoginReq& from);
  void MergeFrom(const RoleLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::uint64 roleid() const;
  void set_roleid(::google::protobuf::uint64 value);

  // int32 LoginCode = 3;
  void clear_logincode();
  static const int kLoginCodeFieldNumber = 3;
  ::google::protobuf::int32 logincode() const;
  void set_logincode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 logincode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleLoginReqImpl();
};
// -------------------------------------------------------------------

class RoleLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLogoutReq) */ {
 public:
  RoleLogoutReq();
  virtual ~RoleLogoutReq();

  RoleLogoutReq(const RoleLogoutReq& from);

  inline RoleLogoutReq& operator=(const RoleLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleLogoutReq(RoleLogoutReq&& from) noexcept
    : RoleLogoutReq() {
    *this = ::std::move(from);
  }

  inline RoleLogoutReq& operator=(RoleLogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLogoutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleLogoutReq* internal_default_instance() {
    return reinterpret_cast<const RoleLogoutReq*>(
               &_RoleLogoutReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(RoleLogoutReq* other);
  friend void swap(RoleLogoutReq& a, RoleLogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleLogoutReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLogoutReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLogoutReq& from);
  void MergeFrom(const RoleLogoutReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RoleLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleLogoutReqImpl();
};
// -------------------------------------------------------------------

class RoleLogoutAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleLogoutAck) */ {
 public:
  RoleLogoutAck();
  virtual ~RoleLogoutAck();

  RoleLogoutAck(const RoleLogoutAck& from);

  inline RoleLogoutAck& operator=(const RoleLogoutAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleLogoutAck(RoleLogoutAck&& from) noexcept
    : RoleLogoutAck() {
    *this = ::std::move(from);
  }

  inline RoleLogoutAck& operator=(RoleLogoutAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLogoutAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleLogoutAck* internal_default_instance() {
    return reinterpret_cast<const RoleLogoutAck*>(
               &_RoleLogoutAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(RoleLogoutAck* other);
  friend void swap(RoleLogoutAck& a, RoleLogoutAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleLogoutAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleLogoutAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleLogoutAck& from);
  void MergeFrom(const RoleLogoutAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleLogoutAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoleLogoutAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleLogoutAckImpl();
};
// -------------------------------------------------------------------

class RoleDisconnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDisconnectReq) */ {
 public:
  RoleDisconnectReq();
  virtual ~RoleDisconnectReq();

  RoleDisconnectReq(const RoleDisconnectReq& from);

  inline RoleDisconnectReq& operator=(const RoleDisconnectReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleDisconnectReq(RoleDisconnectReq&& from) noexcept
    : RoleDisconnectReq() {
    *this = ::std::move(from);
  }

  inline RoleDisconnectReq& operator=(RoleDisconnectReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDisconnectReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleDisconnectReq* internal_default_instance() {
    return reinterpret_cast<const RoleDisconnectReq*>(
               &_RoleDisconnectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RoleDisconnectReq* other);
  friend void swap(RoleDisconnectReq& a, RoleDisconnectReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleDisconnectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDisconnectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDisconnectReq& from);
  void MergeFrom(const RoleDisconnectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDisconnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 AccountID = 1;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 1;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 RoleID = 2;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  ::google::protobuf::uint64 roleid() const;
  void set_roleid(::google::protobuf::uint64 value);

  // int32 LoginCode = 3;
  void clear_logincode();
  static const int kLoginCodeFieldNumber = 3;
  ::google::protobuf::int32 logincode() const;
  void set_logincode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleDisconnectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 roleid_;
  ::google::protobuf::int32 logincode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleDisconnectReqImpl();
};
// -------------------------------------------------------------------

class RoleDisconnectAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleDisconnectAck) */ {
 public:
  RoleDisconnectAck();
  virtual ~RoleDisconnectAck();

  RoleDisconnectAck(const RoleDisconnectAck& from);

  inline RoleDisconnectAck& operator=(const RoleDisconnectAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleDisconnectAck(RoleDisconnectAck&& from) noexcept
    : RoleDisconnectAck() {
    *this = ::std::move(from);
  }

  inline RoleDisconnectAck& operator=(RoleDisconnectAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleDisconnectAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleDisconnectAck* internal_default_instance() {
    return reinterpret_cast<const RoleDisconnectAck*>(
               &_RoleDisconnectAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RoleDisconnectAck* other);
  friend void swap(RoleDisconnectAck& a, RoleDisconnectAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleDisconnectAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleDisconnectAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleDisconnectAck& from);
  void MergeFrom(const RoleDisconnectAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleDisconnectAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoleDisconnectAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleDisconnectAckImpl();
};
// -------------------------------------------------------------------

class RoleReconnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleReconnectReq) */ {
 public:
  RoleReconnectReq();
  virtual ~RoleReconnectReq();

  RoleReconnectReq(const RoleReconnectReq& from);

  inline RoleReconnectReq& operator=(const RoleReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleReconnectReq(RoleReconnectReq&& from) noexcept
    : RoleReconnectReq() {
    *this = ::std::move(from);
  }

  inline RoleReconnectReq& operator=(RoleReconnectReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleReconnectReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleReconnectReq* internal_default_instance() {
    return reinterpret_cast<const RoleReconnectReq*>(
               &_RoleReconnectReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RoleReconnectReq* other);
  friend void swap(RoleReconnectReq& a, RoleReconnectReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleReconnectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleReconnectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleReconnectReq& from);
  void MergeFrom(const RoleReconnectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleReconnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 RoleID = 1;
  void clear_roleid();
  static const int kRoleIDFieldNumber = 1;
  ::google::protobuf::uint64 roleid() const;
  void set_roleid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:RoleReconnectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 roleid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleReconnectReqImpl();
};
// -------------------------------------------------------------------

class RoleReconnectAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RoleReconnectAck) */ {
 public:
  RoleReconnectAck();
  virtual ~RoleReconnectAck();

  RoleReconnectAck(const RoleReconnectAck& from);

  inline RoleReconnectAck& operator=(const RoleReconnectAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoleReconnectAck(RoleReconnectAck&& from) noexcept
    : RoleReconnectAck() {
    *this = ::std::move(from);
  }

  inline RoleReconnectAck& operator=(RoleReconnectAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleReconnectAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RoleReconnectAck* internal_default_instance() {
    return reinterpret_cast<const RoleReconnectAck*>(
               &_RoleReconnectAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RoleReconnectAck* other);
  friend void swap(RoleReconnectAck& a, RoleReconnectAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoleReconnectAck* New() const PROTOBUF_FINAL { return New(NULL); }

  RoleReconnectAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoleReconnectAck& from);
  void MergeFrom(const RoleReconnectAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoleReconnectAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RoleReconnectAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsRoleReconnectAckImpl();
};
// -------------------------------------------------------------------

class BroadMessageNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BroadMessageNotify) */ {
 public:
  BroadMessageNotify();
  virtual ~BroadMessageNotify();

  BroadMessageNotify(const BroadMessageNotify& from);

  inline BroadMessageNotify& operator=(const BroadMessageNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BroadMessageNotify(BroadMessageNotify&& from) noexcept
    : BroadMessageNotify() {
    *this = ::std::move(from);
  }

  inline BroadMessageNotify& operator=(BroadMessageNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadMessageNotify& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadMessageNotify* internal_default_instance() {
    return reinterpret_cast<const BroadMessageNotify*>(
               &_BroadMessageNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BroadMessageNotify* other);
  friend void swap(BroadMessageNotify& a, BroadMessageNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BroadMessageNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BroadMessageNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BroadMessageNotify& from);
  void MergeFrom(const BroadMessageNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BroadMessageNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 ConnID = 2;
  int connid_size() const;
  void clear_connid();
  static const int kConnIDFieldNumber = 2;
  ::google::protobuf::uint32 connid(int index) const;
  void set_connid(int index, ::google::protobuf::uint32 value);
  void add_connid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      connid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_connid();

  // bytes MsgData = 3;
  void clear_msgdata();
  static const int kMsgDataFieldNumber = 3;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 MsgID = 1;
  void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:BroadMessageNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > connid_;
  mutable int _connid_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsBroadMessageNotifyImpl();
};
// -------------------------------------------------------------------

class ChatMessageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatMessageReq) */ {
 public:
  ChatMessageReq();
  virtual ~ChatMessageReq();

  ChatMessageReq(const ChatMessageReq& from);

  inline ChatMessageReq& operator=(const ChatMessageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatMessageReq(ChatMessageReq&& from) noexcept
    : ChatMessageReq() {
    *this = ::std::move(from);
  }

  inline ChatMessageReq& operator=(ChatMessageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessageReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageReq* internal_default_instance() {
    return reinterpret_cast<const ChatMessageReq*>(
               &_ChatMessageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ChatMessageReq* other);
  friend void swap(ChatMessageReq& a, ChatMessageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatMessageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatMessageReq& from);
  void MergeFrom(const ChatMessageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatMessageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SrcName = 1;
  void clear_srcname();
  static const int kSrcNameFieldNumber = 1;
  const ::std::string& srcname() const;
  void set_srcname(const ::std::string& value);
  #if LANG_CXX11
  void set_srcname(::std::string&& value);
  #endif
  void set_srcname(const char* value);
  void set_srcname(const char* value, size_t size);
  ::std::string* mutable_srcname();
  ::std::string* release_srcname();
  void set_allocated_srcname(::std::string* srcname);

  // string Content = 5;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint64 SrcID = 2;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 2;
  ::google::protobuf::uint64 srcid() const;
  void set_srcid(::google::protobuf::uint64 value);

  // uint64 GuildID = 4;
  void clear_guildid();
  static const int kGuildIDFieldNumber = 4;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // int32 Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatMessageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr srcname_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::int32 channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsChatMessageReqImpl();
};
// -------------------------------------------------------------------

class ChatMessageAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatMessageAck) */ {
 public:
  ChatMessageAck();
  virtual ~ChatMessageAck();

  ChatMessageAck(const ChatMessageAck& from);

  inline ChatMessageAck& operator=(const ChatMessageAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatMessageAck(ChatMessageAck&& from) noexcept
    : ChatMessageAck() {
    *this = ::std::move(from);
  }

  inline ChatMessageAck& operator=(ChatMessageAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessageAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageAck* internal_default_instance() {
    return reinterpret_cast<const ChatMessageAck*>(
               &_ChatMessageAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ChatMessageAck* other);
  friend void swap(ChatMessageAck& a, ChatMessageAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageAck* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatMessageAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatMessageAck& from);
  void MergeFrom(const ChatMessageAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatMessageAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ChatMessageAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsChatMessageAckImpl();
};
// -------------------------------------------------------------------

class ChatMessageNty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatMessageNty) */ {
 public:
  ChatMessageNty();
  virtual ~ChatMessageNty();

  ChatMessageNty(const ChatMessageNty& from);

  inline ChatMessageNty& operator=(const ChatMessageNty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatMessageNty(ChatMessageNty&& from) noexcept
    : ChatMessageNty() {
    *this = ::std::move(from);
  }

  inline ChatMessageNty& operator=(ChatMessageNty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessageNty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ChatMessageNty* internal_default_instance() {
    return reinterpret_cast<const ChatMessageNty*>(
               &_ChatMessageNty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ChatMessageNty* other);
  friend void swap(ChatMessageNty& a, ChatMessageNty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatMessageNty* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatMessageNty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatMessageNty& from);
  void MergeFrom(const ChatMessageNty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatMessageNty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SrcName = 1;
  void clear_srcname();
  static const int kSrcNameFieldNumber = 1;
  const ::std::string& srcname() const;
  void set_srcname(const ::std::string& value);
  #if LANG_CXX11
  void set_srcname(::std::string&& value);
  #endif
  void set_srcname(const char* value);
  void set_srcname(const char* value, size_t size);
  ::std::string* mutable_srcname();
  ::std::string* release_srcname();
  void set_allocated_srcname(::std::string* srcname);

  // string Content = 5;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint64 SrcID = 2;
  void clear_srcid();
  static const int kSrcIDFieldNumber = 2;
  ::google::protobuf::uint64 srcid() const;
  void set_srcid(::google::protobuf::uint64 value);

  // uint64 GuildID = 4;
  void clear_guildid();
  static const int kGuildIDFieldNumber = 4;
  ::google::protobuf::uint64 guildid() const;
  void set_guildid(::google::protobuf::uint64 value);

  // int32 Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ChatMessageNty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr srcname_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 srcid_;
  ::google::protobuf::uint64 guildid_;
  ::google::protobuf::int32 channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fLogicServer_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fLogicServer_2eproto::InitDefaultsChatMessageNtyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RoleItem

// uint64 RoleID = 1;
inline void RoleItem::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleItem::roleid() const {
  // @@protoc_insertion_point(field_get:RoleItem.RoleID)
  return roleid_;
}
inline void RoleItem::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.RoleID)
}

// string Name = 2;
inline void RoleItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoleItem::name() const {
  // @@protoc_insertion_point(field_get:RoleItem.Name)
  return name_.GetNoArena();
}
inline void RoleItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleItem.Name)
}
#if LANG_CXX11
inline void RoleItem::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleItem.Name)
}
#endif
inline void RoleItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleItem.Name)
}
inline void RoleItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleItem.Name)
}
inline ::std::string* RoleItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleItem::release_name() {
  // @@protoc_insertion_point(field_release:RoleItem.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleItem.Name)
}

// int32 Carrer = 3;
inline void RoleItem::clear_carrer() {
  carrer_ = 0;
}
inline ::google::protobuf::int32 RoleItem::carrer() const {
  // @@protoc_insertion_point(field_get:RoleItem.Carrer)
  return carrer_;
}
inline void RoleItem::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.Carrer)
}

// int32 Level = 4;
inline void RoleItem::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 RoleItem::level() const {
  // @@protoc_insertion_point(field_get:RoleItem.Level)
  return level_;
}
inline void RoleItem::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:RoleItem.Level)
}

// -------------------------------------------------------------------

// RoleListReq

// uint64 AccountID = 1;
inline void RoleListReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleListReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleListReq.AccountID)
  return accountid_;
}
inline void RoleListReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.AccountID)
}

// int32 LoginCode = 2;
inline void RoleListReq::clear_logincode() {
  logincode_ = 0;
}
inline ::google::protobuf::int32 RoleListReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleListReq.LoginCode)
  return logincode_;
}
inline void RoleListReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleListReq.LoginCode)
}

// -------------------------------------------------------------------

// RoleListAck

// uint32 RetCode = 1;
inline void RoleListAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 RoleListAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleListAck.RetCode)
  return retcode_;
}
inline void RoleListAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleListAck.RetCode)
}

// repeated .RoleItem RoleList = 2;
inline int RoleListAck::rolelist_size() const {
  return rolelist_.size();
}
inline void RoleListAck::clear_rolelist() {
  rolelist_.Clear();
}
inline const ::RoleItem& RoleListAck::rolelist(int index) const {
  // @@protoc_insertion_point(field_get:RoleListAck.RoleList)
  return rolelist_.Get(index);
}
inline ::RoleItem* RoleListAck::mutable_rolelist(int index) {
  // @@protoc_insertion_point(field_mutable:RoleListAck.RoleList)
  return rolelist_.Mutable(index);
}
inline ::RoleItem* RoleListAck::add_rolelist() {
  // @@protoc_insertion_point(field_add:RoleListAck.RoleList)
  return rolelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RoleItem >*
RoleListAck::mutable_rolelist() {
  // @@protoc_insertion_point(field_mutable_list:RoleListAck.RoleList)
  return &rolelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleItem >&
RoleListAck::rolelist() const {
  // @@protoc_insertion_point(field_list:RoleListAck.RoleList)
  return rolelist_;
}

// -------------------------------------------------------------------

// RoleCreateReq

// uint64 AccountID = 1;
inline void RoleCreateReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleCreateReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.AccountID)
  return accountid_;
}
inline void RoleCreateReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.AccountID)
}

// string Name = 2;
inline void RoleCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoleCreateReq::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Name)
  return name_.GetNoArena();
}
inline void RoleCreateReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateReq.Name)
}
#if LANG_CXX11
inline void RoleCreateReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleCreateReq.Name)
}
#endif
inline void RoleCreateReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateReq.Name)
}
inline void RoleCreateReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateReq.Name)
}
inline ::std::string* RoleCreateReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateReq.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateReq.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateReq.Name)
}

// int32 Carrer = 3;
inline void RoleCreateReq::clear_carrer() {
  carrer_ = 0;
}
inline ::google::protobuf::int32 RoleCreateReq::carrer() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Carrer)
  return carrer_;
}
inline void RoleCreateReq::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.Carrer)
}

// int32 Channel = 4;
inline void RoleCreateReq::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 RoleCreateReq::channel() const {
  // @@protoc_insertion_point(field_get:RoleCreateReq.Channel)
  return channel_;
}
inline void RoleCreateReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateReq.Channel)
}

// -------------------------------------------------------------------

// RoleCreateAck

// uint32 RetCode = 1;
inline void RoleCreateAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 RoleCreateAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RetCode)
  return retcode_;
}
inline void RoleCreateAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RetCode)
}

// uint64 AccountID = 2;
inline void RoleCreateAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleCreateAck::accountid() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.AccountID)
  return accountid_;
}
inline void RoleCreateAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.AccountID)
}

// uint64 RoleID = 3;
inline void RoleCreateAck::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleCreateAck::roleid() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.RoleID)
  return roleid_;
}
inline void RoleCreateAck::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.RoleID)
}

// string Name = 4;
inline void RoleCreateAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RoleCreateAck::name() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.Name)
  return name_.GetNoArena();
}
inline void RoleCreateAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RoleCreateAck.Name)
}
#if LANG_CXX11
inline void RoleCreateAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RoleCreateAck.Name)
}
#endif
inline void RoleCreateAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RoleCreateAck.Name)
}
inline void RoleCreateAck::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RoleCreateAck.Name)
}
inline ::std::string* RoleCreateAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:RoleCreateAck.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoleCreateAck::release_name() {
  // @@protoc_insertion_point(field_release:RoleCreateAck.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoleCreateAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:RoleCreateAck.Name)
}

// int32 Carrer = 5;
inline void RoleCreateAck::clear_carrer() {
  carrer_ = 0;
}
inline ::google::protobuf::int32 RoleCreateAck::carrer() const {
  // @@protoc_insertion_point(field_get:RoleCreateAck.Carrer)
  return carrer_;
}
inline void RoleCreateAck::set_carrer(::google::protobuf::int32 value) {
  
  carrer_ = value;
  // @@protoc_insertion_point(field_set:RoleCreateAck.Carrer)
}

// -------------------------------------------------------------------

// RoleDeleteReq

// uint64 AccountID = 1;
inline void RoleDeleteReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleDeleteReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.AccountID)
  return accountid_;
}
inline void RoleDeleteReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.AccountID)
}

// uint64 RoleID = 2;
inline void RoleDeleteReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleDeleteReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDeleteReq.RoleID)
  return roleid_;
}
inline void RoleDeleteReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteReq.RoleID)
}

// -------------------------------------------------------------------

// RoleDeleteAck

// uint32 RetCode = 1;
inline void RoleDeleteAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 RoleDeleteAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDeleteAck.RetCode)
  return retcode_;
}
inline void RoleDeleteAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDeleteAck.RetCode)
}

// -------------------------------------------------------------------

// RoleLoginReq

// uint64 AccountID = 1;
inline void RoleLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.AccountID)
  return accountid_;
}
inline void RoleLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.AccountID)
}

// uint64 RoleID = 2;
inline void RoleLoginReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleLoginReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.RoleID)
  return roleid_;
}
inline void RoleLoginReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.RoleID)
}

// int32 LoginCode = 3;
inline void RoleLoginReq::clear_logincode() {
  logincode_ = 0;
}
inline ::google::protobuf::int32 RoleLoginReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleLoginReq.LoginCode)
  return logincode_;
}
inline void RoleLoginReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleLoginReq.LoginCode)
}

// -------------------------------------------------------------------

// RoleLogoutReq

// uint64 AccountID = 1;
inline void RoleLogoutReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleLogoutReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleLogoutReq.AccountID)
  return accountid_;
}
inline void RoleLogoutReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutReq.AccountID)
}

// -------------------------------------------------------------------

// RoleLogoutAck

// uint32 RetCode = 1;
inline void RoleLogoutAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 RoleLogoutAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleLogoutAck.RetCode)
  return retcode_;
}
inline void RoleLogoutAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleLogoutAck.RetCode)
}

// -------------------------------------------------------------------

// RoleDisconnectReq

// uint64 AccountID = 1;
inline void RoleDisconnectReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleDisconnectReq::accountid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.AccountID)
  return accountid_;
}
inline void RoleDisconnectReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.AccountID)
}

// uint64 RoleID = 2;
inline void RoleDisconnectReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleDisconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.RoleID)
  return roleid_;
}
inline void RoleDisconnectReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.RoleID)
}

// int32 LoginCode = 3;
inline void RoleDisconnectReq::clear_logincode() {
  logincode_ = 0;
}
inline ::google::protobuf::int32 RoleDisconnectReq::logincode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectReq.LoginCode)
  return logincode_;
}
inline void RoleDisconnectReq::set_logincode(::google::protobuf::int32 value) {
  
  logincode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectReq.LoginCode)
}

// -------------------------------------------------------------------

// RoleDisconnectAck

// uint32 RetCode = 1;
inline void RoleDisconnectAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 RoleDisconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleDisconnectAck.RetCode)
  return retcode_;
}
inline void RoleDisconnectAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleDisconnectAck.RetCode)
}

// -------------------------------------------------------------------

// RoleReconnectReq

// uint64 RoleID = 1;
inline void RoleReconnectReq::clear_roleid() {
  roleid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RoleReconnectReq::roleid() const {
  // @@protoc_insertion_point(field_get:RoleReconnectReq.RoleID)
  return roleid_;
}
inline void RoleReconnectReq::set_roleid(::google::protobuf::uint64 value) {
  
  roleid_ = value;
  // @@protoc_insertion_point(field_set:RoleReconnectReq.RoleID)
}

// -------------------------------------------------------------------

// RoleReconnectAck

// uint32 RetCode = 1;
inline void RoleReconnectAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 RoleReconnectAck::retcode() const {
  // @@protoc_insertion_point(field_get:RoleReconnectAck.RetCode)
  return retcode_;
}
inline void RoleReconnectAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:RoleReconnectAck.RetCode)
}

// -------------------------------------------------------------------

// BroadMessageNotify

// uint32 MsgID = 1;
inline void BroadMessageNotify::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 BroadMessageNotify::msgid() const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.MsgID)
  return msgid_;
}
inline void BroadMessageNotify::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:BroadMessageNotify.MsgID)
}

// repeated uint32 ConnID = 2;
inline int BroadMessageNotify::connid_size() const {
  return connid_.size();
}
inline void BroadMessageNotify::clear_connid() {
  connid_.Clear();
}
inline ::google::protobuf::uint32 BroadMessageNotify::connid(int index) const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.ConnID)
  return connid_.Get(index);
}
inline void BroadMessageNotify::set_connid(int index, ::google::protobuf::uint32 value) {
  connid_.Set(index, value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.ConnID)
}
inline void BroadMessageNotify::add_connid(::google::protobuf::uint32 value) {
  connid_.Add(value);
  // @@protoc_insertion_point(field_add:BroadMessageNotify.ConnID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BroadMessageNotify::connid() const {
  // @@protoc_insertion_point(field_list:BroadMessageNotify.ConnID)
  return connid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BroadMessageNotify::mutable_connid() {
  // @@protoc_insertion_point(field_mutable_list:BroadMessageNotify.ConnID)
  return &connid_;
}

// bytes MsgData = 3;
inline void BroadMessageNotify::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadMessageNotify::msgdata() const {
  // @@protoc_insertion_point(field_get:BroadMessageNotify.MsgData)
  return msgdata_.GetNoArena();
}
inline void BroadMessageNotify::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BroadMessageNotify.MsgData)
}
#if LANG_CXX11
inline void BroadMessageNotify::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:BroadMessageNotify.MsgData)
}
#endif
inline void BroadMessageNotify::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BroadMessageNotify.MsgData)
}
inline void BroadMessageNotify::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BroadMessageNotify.MsgData)
}
inline ::std::string* BroadMessageNotify::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:BroadMessageNotify.MsgData)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadMessageNotify::release_msgdata() {
  // @@protoc_insertion_point(field_release:BroadMessageNotify.MsgData)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadMessageNotify::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:BroadMessageNotify.MsgData)
}

// -------------------------------------------------------------------

// ChatMessageReq

// string SrcName = 1;
inline void ChatMessageReq::clear_srcname() {
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageReq::srcname() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.SrcName)
  return srcname_.GetNoArena();
}
inline void ChatMessageReq::set_srcname(const ::std::string& value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.SrcName)
}
#if LANG_CXX11
inline void ChatMessageReq::set_srcname(::std::string&& value) {
  
  srcname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageReq.SrcName)
}
#endif
inline void ChatMessageReq::set_srcname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageReq.SrcName)
}
inline void ChatMessageReq::set_srcname(const char* value, size_t size) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageReq.SrcName)
}
inline ::std::string* ChatMessageReq::mutable_srcname() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageReq.SrcName)
  return srcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageReq::release_srcname() {
  // @@protoc_insertion_point(field_release:ChatMessageReq.SrcName)
  
  return srcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageReq::set_allocated_srcname(::std::string* srcname) {
  if (srcname != NULL) {
    
  } else {
    
  }
  srcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcname);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageReq.SrcName)
}

// uint64 SrcID = 2;
inline void ChatMessageReq::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChatMessageReq::srcid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.SrcID)
  return srcid_;
}
inline void ChatMessageReq::set_srcid(::google::protobuf::uint64 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageReq.SrcID)
}

// int32 Channel = 3;
inline void ChatMessageReq::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 ChatMessageReq::channel() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.Channel)
  return channel_;
}
inline void ChatMessageReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageReq.Channel)
}

// uint64 GuildID = 4;
inline void ChatMessageReq::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChatMessageReq::guildid() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.GuildID)
  return guildid_;
}
inline void ChatMessageReq::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageReq.GuildID)
}

// string Content = 5;
inline void ChatMessageReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageReq::content() const {
  // @@protoc_insertion_point(field_get:ChatMessageReq.Content)
  return content_.GetNoArena();
}
inline void ChatMessageReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageReq.Content)
}
#if LANG_CXX11
inline void ChatMessageReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageReq.Content)
}
#endif
inline void ChatMessageReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageReq.Content)
}
inline void ChatMessageReq::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageReq.Content)
}
inline ::std::string* ChatMessageReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageReq.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageReq::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessageReq.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageReq.Content)
}

// -------------------------------------------------------------------

// ChatMessageAck

// uint32 RetCode = 1;
inline void ChatMessageAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 ChatMessageAck::retcode() const {
  // @@protoc_insertion_point(field_get:ChatMessageAck.RetCode)
  return retcode_;
}
inline void ChatMessageAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageAck.RetCode)
}

// -------------------------------------------------------------------

// ChatMessageNty

// string SrcName = 1;
inline void ChatMessageNty::clear_srcname() {
  srcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageNty::srcname() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcName)
  return srcname_.GetNoArena();
}
inline void ChatMessageNty::set_srcname(const ::std::string& value) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcName)
}
#if LANG_CXX11
inline void ChatMessageNty::set_srcname(::std::string&& value) {
  
  srcname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageNty.SrcName)
}
#endif
inline void ChatMessageNty::set_srcname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageNty.SrcName)
}
inline void ChatMessageNty::set_srcname(const char* value, size_t size) {
  
  srcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageNty.SrcName)
}
inline ::std::string* ChatMessageNty::mutable_srcname() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageNty.SrcName)
  return srcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageNty::release_srcname() {
  // @@protoc_insertion_point(field_release:ChatMessageNty.SrcName)
  
  return srcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageNty::set_allocated_srcname(::std::string* srcname) {
  if (srcname != NULL) {
    
  } else {
    
  }
  srcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcname);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageNty.SrcName)
}

// uint64 SrcID = 2;
inline void ChatMessageNty::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChatMessageNty::srcid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.SrcID)
  return srcid_;
}
inline void ChatMessageNty::set_srcid(::google::protobuf::uint64 value) {
  
  srcid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageNty.SrcID)
}

// int32 Channel = 3;
inline void ChatMessageNty::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 ChatMessageNty::channel() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.Channel)
  return channel_;
}
inline void ChatMessageNty::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageNty.Channel)
}

// uint64 GuildID = 4;
inline void ChatMessageNty::clear_guildid() {
  guildid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ChatMessageNty::guildid() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.GuildID)
  return guildid_;
}
inline void ChatMessageNty::set_guildid(::google::protobuf::uint64 value) {
  
  guildid_ = value;
  // @@protoc_insertion_point(field_set:ChatMessageNty.GuildID)
}

// string Content = 5;
inline void ChatMessageNty::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessageNty::content() const {
  // @@protoc_insertion_point(field_get:ChatMessageNty.Content)
  return content_.GetNoArena();
}
inline void ChatMessageNty::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessageNty.Content)
}
#if LANG_CXX11
inline void ChatMessageNty::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ChatMessageNty.Content)
}
#endif
inline void ChatMessageNty::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessageNty.Content)
}
inline void ChatMessageNty::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessageNty.Content)
}
inline ::std::string* ChatMessageNty::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessageNty.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessageNty::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessageNty.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessageNty::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatMessageNty.Content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Msg_5fLogicServer_2eproto__INCLUDED
