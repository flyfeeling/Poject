// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_ID.proto

#include "Msg_ID.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace protobuf_Msg_5fID_2eproto {
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_ID.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Msg_ID.proto*\365\016\n\tMessageID\022\r\n\tMSG_BEGI"
      "N\020\000\022\024\n\017MSG_LOGIN_BEGIN\020\221N\022\032\n\025MSG_CHECK_V"
      "ERSION_REQ\020\222N\022\032\n\025MSG_CHECK_VERSION_ACK\020\223"
      "N\022\030\n\023MSG_SERVER_LIST_REQ\020\224N\022\030\n\023MSG_SERVE"
      "R_LIST_ACK\020\225N\022\032\n\025MSG_SELECT_SERVER_REQ\020\226"
      "N\022\032\n\025MSG_SELECT_SERVER_ACK\020\227N\022\036\n\031MSG_LOG"
      "IC_REGTO_LOGIN_REQ\020\230N\022\036\n\031MSG_LOGIC_REGTO"
      "_LOGIN_ACK\020\231N\022\022\n\rMSG_LOGIN_END\020\340]\022\026\n\021MSG"
      "_ACCOUNT_BEGIN\020\341]\022\030\n\023MSG_ACCOUNT_REG_REQ"
      "\020\342]\022\030\n\023MSG_ACCOUNT_REG_ACK\020\343]\022\032\n\025MSG_ACC"
      "OUNT_LOGIN_REQ\020\344]\022\032\n\025MSG_ACCOUNT_LOGIN_A"
      "CK\020\345]\022\031\n\024MSG_SEAL_ACCOUNT_REQ\020\346]\022\031\n\024MSG_"
      "SEAL_ACCOUNT_ACK\020\347]\022\024\n\017MSG_ACCOUNT_END\020\310"
      "e\022\024\n\017MSG_LOGIC_BEGIN\020\311e\022\030\n\023MSG_ROLE_CREA"
      "TE_REQ\020\312e\022\030\n\023MSG_ROLE_CREATE_ACK\020\313e\022\030\n\023M"
      "SG_ROLE_DELETE_REQ\020\314e\022\030\n\023MSG_ROLE_DELETE"
      "_ACK\020\315e\022\027\n\022MSG_ROLE_LOGIN_REQ\020\316e\022\027\n\022MSG_"
      "ROLE_LOGIN_ACK\020\317e\022\030\n\023MSG_ROLE_LOGOUT_REQ"
      "\020\320e\022\030\n\023MSG_ROLE_LOGOUT_ACK\020\321e\022\026\n\021MSG_ROL"
      "E_LIST_REQ\020\322e\022\026\n\021MSG_ROLE_LIST_ACK\020\323e\022\033\n"
      "\026MSG_ROLE_RECONNECT_REQ\020\324e\022\033\n\026MSG_ROLE_R"
      "ECONNECT_ACK\020\325e\022\035\n\030MSG_BROAD_MESSAGE_NOT"
      "IFY\020\326e\022\036\n\031MSG_GASVR_REGTO_PROXY_REQ\020\327e\022\036"
      "\n\031MSG_GASVR_REGTO_PROXY_ACK\020\330e\022\035\n\030MSG_RO"
      "LE_OTHER_LOGIN_NTY\020\331e\022\027\n\022MSG_DISCONNECT_"
      "NTY\020\332e\022\031\n\024MSG_CHAT_MESSAGE_REQ\020\275i\022\031\n\024MSG"
      "_CHAT_MESSAGE_ACK\020\276i\022\031\n\024MSG_CHAT_MESSAGE"
      "_NTY\020\277i\022\022\n\rMSG_LOGIC_END\020\230u\022\024\n\016MSG_GAME_"
      "BEGIN\020\241\234\001\022\036\n\030MSG_GAME_REGTO_LOGIC_REQ\020\242\234"
      "\001\022\036\n\030MSG_GAME_REGTO_LOGIC_ACK\020\243\234\001\022\032\n\024MSG"
      "_CREATE_SCENE_REQ\020\316\236\001\022\032\n\024MSG_CREATE_SCEN"
      "E_ACK\020\317\236\001\022\032\n\024MSG_DELETE_SCENE_REQ\020\320\236\001\022\032\n"
      "\024MSG_DELETE_SCENE_ACK\020\321\236\001\022\033\n\025MSG_SCENE_D"
      "ESTROY_REQ\020\322\236\001\022\033\n\025MSG_SCENE_DESTROY_ACK\020"
      "\323\236\001\022\033\n\025MSG_TRANSFER_DATA_REQ\020\324\236\001\022\033\n\025MSG_"
      "TRANSFER_DATA_ACK\020\325\236\001\022\037\n\031MSG_NOTIFY_ROLE"
      "_ENTER_REQ\020\326\236\001\022\037\n\031MSG_NOTIFY_ROLE_ENTER_"
      "ACK\020\327\236\001\022\031\n\023MSG_ENTER_SCENE_REQ\020\330\236\001\022\031\n\023MS"
      "G_ENTER_SCENE_ACK\020\331\236\001\022\031\n\023MSG_LEAVE_SCENE"
      "_REQ\020\332\236\001\022\031\n\023MSG_LEAVE_SCENE_ACK\020\333\236\001\022\035\n\027M"
      "SG_CLIENT_LOGIN_GS_REQ\020\261\237\001\022\035\n\027MSG_CLIENT"
      "_LOGIN_GS_ACK\020\262\237\001\022\031\n\023MSG_CREATE_ROOM_REQ"
      "\020\263\237\001\022\031\n\023MSG_CREATE_ROOM_ACK\020\264\237\001\022\026\n\020MSG_F"
      "INDPATH_REQ\020\265\237\001\022\026\n\020MSG_FINDPATH_ACK\020\266\237\001\022"
      "\022\n\014MSG_GAME_END\020\250\303\001\022\030\n\022MSG_AI_MSGID_BEGI"
      "N\020\251\303\001\022\037\n\031MSG_GS_REGISTER_AISVR_REQ\020\332\263\001\022\037"
      "\n\031MSG_GS_REGISTER_AISVR_ACK\020\333\263\001\022\026\n\020MSG_A"
      "I_MSGID_END\020\220\313\001\022\016\n\010MSG_PING\020\372\377\003\022\r\n\007MSG_E"
      "ND\020\377\377\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1934);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_ID.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Msg_5fID_2eproto
const ::google::protobuf::EnumDescriptor* MessageID_descriptor() {
  protobuf_Msg_5fID_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Msg_5fID_2eproto::file_level_enum_descriptors[0];
}
bool MessageID_IsValid(int value) {
  switch (value) {
    case 0:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
    case 10009:
    case 12000:
    case 12001:
    case 12002:
    case 12003:
    case 12004:
    case 12005:
    case 12006:
    case 12007:
    case 13000:
    case 13001:
    case 13002:
    case 13003:
    case 13004:
    case 13005:
    case 13006:
    case 13007:
    case 13008:
    case 13009:
    case 13010:
    case 13011:
    case 13012:
    case 13013:
    case 13014:
    case 13015:
    case 13016:
    case 13017:
    case 13018:
    case 13501:
    case 13502:
    case 13503:
    case 15000:
    case 20001:
    case 20002:
    case 20003:
    case 20302:
    case 20303:
    case 20304:
    case 20305:
    case 20306:
    case 20307:
    case 20308:
    case 20309:
    case 20310:
    case 20311:
    case 20312:
    case 20313:
    case 20314:
    case 20315:
    case 20401:
    case 20402:
    case 20403:
    case 20404:
    case 20405:
    case 20406:
    case 23002:
    case 23003:
    case 25000:
    case 25001:
    case 26000:
    case 65530:
    case 65535:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
