// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_ID.proto

#ifndef PROTOBUF_Msg_5fID_2eproto__INCLUDED
#define PROTOBUF_Msg_5fID_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Msg_5fID_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
inline void InitDefaults() {
}
}  // namespace protobuf_Msg_5fID_2eproto

enum MessageID {
  MSG_BEGIN = 0,
  MSG_LOGIN_BEGIN = 10001,
  MSG_CHECK_VERSION_REQ = 10002,
  MSG_CHECK_VERSION_ACK = 10003,
  MSG_SERVER_LIST_REQ = 10004,
  MSG_SERVER_LIST_ACK = 10005,
  MSG_SELECT_SERVER_REQ = 10006,
  MSG_SELECT_SERVER_ACK = 10007,
  MSG_LOGIC_REGTO_LOGIN_REQ = 10008,
  MSG_LOGIC_REGTO_LOGIN_ACK = 10009,
  MSG_LOGIN_END = 12000,
  MSG_ACCOUNT_BEGIN = 12001,
  MSG_ACCOUNT_REG_REQ = 12002,
  MSG_ACCOUNT_REG_ACK = 12003,
  MSG_ACCOUNT_LOGIN_REQ = 12004,
  MSG_ACCOUNT_LOGIN_ACK = 12005,
  MSG_SEAL_ACCOUNT_REQ = 12006,
  MSG_SEAL_ACCOUNT_ACK = 12007,
  MSG_ACCOUNT_END = 13000,
  MSG_LOGIC_BEGIN = 13001,
  MSG_ROLE_CREATE_REQ = 13002,
  MSG_ROLE_CREATE_ACK = 13003,
  MSG_ROLE_DELETE_REQ = 13004,
  MSG_ROLE_DELETE_ACK = 13005,
  MSG_ROLE_LOGIN_REQ = 13006,
  MSG_ROLE_LOGIN_ACK = 13007,
  MSG_ROLE_LOGOUT_REQ = 13008,
  MSG_ROLE_LOGOUT_ACK = 13009,
  MSG_ROLE_LIST_REQ = 13010,
  MSG_ROLE_LIST_ACK = 13011,
  MSG_ROLE_RECONNECT_REQ = 13012,
  MSG_ROLE_RECONNECT_ACK = 13013,
  MSG_BROAD_MESSAGE_NOTIFY = 13014,
  MSG_GASVR_REGTO_PROXY_REQ = 13015,
  MSG_GASVR_REGTO_PROXY_ACK = 13016,
  MSG_ROLE_OTHER_LOGIN_NTY = 13017,
  MSG_DISCONNECT_NTY = 13018,
  MSG_CHAT_MESSAGE_REQ = 13501,
  MSG_CHAT_MESSAGE_ACK = 13502,
  MSG_CHAT_MESSAGE_NTY = 13503,
  MSG_LOGIC_END = 15000,
  MSG_GAME_BEGIN = 20001,
  MSG_GAME_REGTO_LOGIC_REQ = 20002,
  MSG_GAME_REGTO_LOGIC_ACK = 20003,
  MSG_CREATE_SCENE_REQ = 20302,
  MSG_CREATE_SCENE_ACK = 20303,
  MSG_DELETE_SCENE_REQ = 20304,
  MSG_DELETE_SCENE_ACK = 20305,
  MSG_SCENE_DESTROY_REQ = 20306,
  MSG_SCENE_DESTROY_ACK = 20307,
  MSG_TRANSFER_DATA_REQ = 20308,
  MSG_TRANSFER_DATA_ACK = 20309,
  MSG_NOTIFY_ROLE_ENTER_REQ = 20310,
  MSG_NOTIFY_ROLE_ENTER_ACK = 20311,
  MSG_ENTER_SCENE_REQ = 20312,
  MSG_ENTER_SCENE_ACK = 20313,
  MSG_LEAVE_SCENE_REQ = 20314,
  MSG_LEAVE_SCENE_ACK = 20315,
  MSG_CLIENT_LOGIN_GS_REQ = 20401,
  MSG_CLIENT_LOGIN_GS_ACK = 20402,
  MSG_CREATE_ROOM_REQ = 20403,
  MSG_CREATE_ROOM_ACK = 20404,
  MSG_FINDPATH_REQ = 20405,
  MSG_FINDPATH_ACK = 20406,
  MSG_GAME_END = 25000,
  MSG_AI_MSGID_BEGIN = 25001,
  MSG_GS_REGISTER_AISVR_REQ = 23002,
  MSG_GS_REGISTER_AISVR_ACK = 23003,
  MSG_AI_MSGID_END = 26000,
  MSG_PING = 65530,
  MSG_END = 65535,
  MessageID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageID_IsValid(int value);
const MessageID MessageID_MIN = MSG_BEGIN;
const MessageID MessageID_MAX = MSG_END;
const int MessageID_ARRAYSIZE = MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageID_descriptor();
inline const ::std::string& MessageID_Name(MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageID_descriptor(), value);
}
inline bool MessageID_Parse(
    const ::std::string& name, MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageID>(
    MessageID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MessageID>() {
  return ::MessageID_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Msg_5fID_2eproto__INCLUDED
