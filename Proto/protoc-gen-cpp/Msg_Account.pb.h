// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Account.proto

#ifndef PROTOBUF_Msg_5fAccount_2eproto__INCLUDED
#define PROTOBUF_Msg_5fAccount_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Msg_5fAccount_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAccountLoginReqImpl();
void InitDefaultsAccountLoginReq();
void InitDefaultsAccountLoginAckImpl();
void InitDefaultsAccountLoginAck();
void InitDefaultsSealAccountReqImpl();
void InitDefaultsSealAccountReq();
void InitDefaultsSealAccountAckImpl();
void InitDefaultsSealAccountAck();
void InitDefaultsAccountRegReqImpl();
void InitDefaultsAccountRegReq();
void InitDefaultsAccountRegAckImpl();
void InitDefaultsAccountRegAck();
inline void InitDefaults() {
  InitDefaultsAccountLoginReq();
  InitDefaultsAccountLoginAck();
  InitDefaultsSealAccountReq();
  InitDefaultsSealAccountAck();
  InitDefaultsAccountRegReq();
  InitDefaultsAccountRegAck();
}
}  // namespace protobuf_Msg_5fAccount_2eproto
class AccountLoginAck;
class AccountLoginAckDefaultTypeInternal;
extern AccountLoginAckDefaultTypeInternal _AccountLoginAck_default_instance_;
class AccountLoginReq;
class AccountLoginReqDefaultTypeInternal;
extern AccountLoginReqDefaultTypeInternal _AccountLoginReq_default_instance_;
class AccountRegAck;
class AccountRegAckDefaultTypeInternal;
extern AccountRegAckDefaultTypeInternal _AccountRegAck_default_instance_;
class AccountRegReq;
class AccountRegReqDefaultTypeInternal;
extern AccountRegReqDefaultTypeInternal _AccountRegReq_default_instance_;
class SealAccountAck;
class SealAccountAckDefaultTypeInternal;
extern SealAccountAckDefaultTypeInternal _SealAccountAck_default_instance_;
class SealAccountReq;
class SealAccountReqDefaultTypeInternal;
extern SealAccountReqDefaultTypeInternal _SealAccountReq_default_instance_;

// ===================================================================

class AccountLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountLoginReq) */ {
 public:
  AccountLoginReq();
  virtual ~AccountLoginReq();

  AccountLoginReq(const AccountLoginReq& from);

  inline AccountLoginReq& operator=(const AccountLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLoginReq(AccountLoginReq&& from) noexcept
    : AccountLoginReq() {
    *this = ::std::move(from);
  }

  inline AccountLoginReq& operator=(AccountLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLoginReq* internal_default_instance() {
    return reinterpret_cast<const AccountLoginReq*>(
               &_AccountLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AccountLoginReq* other);
  friend void swap(AccountLoginReq& a, AccountLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountLoginReq& from);
  void MergeFrom(const AccountLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 1;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string ClientVerion = 4;
  void clear_clientverion();
  static const int kClientVerionFieldNumber = 4;
  const ::std::string& clientverion() const;
  void set_clientverion(const ::std::string& value);
  #if LANG_CXX11
  void set_clientverion(::std::string&& value);
  #endif
  void set_clientverion(const char* value);
  void set_clientverion(const char* value, size_t size);
  ::std::string* mutable_clientverion();
  ::std::string* release_clientverion();
  void set_allocated_clientverion(::std::string* clientverion);

  // int32 Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // uint32 FromChannel = 5;
  void clear_fromchannel();
  static const int kFromChannelFieldNumber = 5;
  ::google::protobuf::uint32 fromchannel() const;
  void set_fromchannel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AccountLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr clientverion_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::uint32 fromchannel_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fAccount_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fAccount_2eproto::InitDefaultsAccountLoginReqImpl();
};
// -------------------------------------------------------------------

class AccountLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountLoginAck) */ {
 public:
  AccountLoginAck();
  virtual ~AccountLoginAck();

  AccountLoginAck(const AccountLoginAck& from);

  inline AccountLoginAck& operator=(const AccountLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountLoginAck(AccountLoginAck&& from) noexcept
    : AccountLoginAck() {
    *this = ::std::move(from);
  }

  inline AccountLoginAck& operator=(AccountLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountLoginAck* internal_default_instance() {
    return reinterpret_cast<const AccountLoginAck*>(
               &_AccountLoginAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AccountLoginAck* other);
  friend void swap(AccountLoginAck& a, AccountLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountLoginAck* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountLoginAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountLoginAck& from);
  void MergeFrom(const AccountLoginAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string LastSvrName = 4;
  void clear_lastsvrname();
  static const int kLastSvrNameFieldNumber = 4;
  const ::std::string& lastsvrname() const;
  void set_lastsvrname(const ::std::string& value);
  #if LANG_CXX11
  void set_lastsvrname(::std::string&& value);
  #endif
  void set_lastsvrname(const char* value);
  void set_lastsvrname(const char* value, size_t size);
  ::std::string* mutable_lastsvrname();
  ::std::string* release_lastsvrname();
  void set_allocated_lastsvrname(::std::string* lastsvrname);

  // uint64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // int32 LastSvrID = 3;
  void clear_lastsvrid();
  static const int kLastSvrIDFieldNumber = 3;
  ::google::protobuf::int32 lastsvrid() const;
  void set_lastsvrid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lastsvrname_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::int32 lastsvrid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fAccount_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fAccount_2eproto::InitDefaultsAccountLoginAckImpl();
};
// -------------------------------------------------------------------

class SealAccountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SealAccountReq) */ {
 public:
  SealAccountReq();
  virtual ~SealAccountReq();

  SealAccountReq(const SealAccountReq& from);

  inline SealAccountReq& operator=(const SealAccountReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealAccountReq(SealAccountReq&& from) noexcept
    : SealAccountReq() {
    *this = ::std::move(from);
  }

  inline SealAccountReq& operator=(SealAccountReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealAccountReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SealAccountReq* internal_default_instance() {
    return reinterpret_cast<const SealAccountReq*>(
               &_SealAccountReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SealAccountReq* other);
  friend void swap(SealAccountReq& a, SealAccountReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealAccountReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SealAccountReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealAccountReq& from);
  void MergeFrom(const SealAccountReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealAccountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 1;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // uint64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // int32 Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // int32 SealTime = 4;
  void clear_sealtime();
  static const int kSealTimeFieldNumber = 4;
  ::google::protobuf::int32 sealtime() const;
  void set_sealtime(::google::protobuf::int32 value);

  // bool Seal = 5;
  void clear_seal();
  static const int kSealFieldNumber = 5;
  bool seal() const;
  void set_seal(bool value);

  // @@protoc_insertion_point(class_scope:SealAccountReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 sealtime_;
  bool seal_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fAccount_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fAccount_2eproto::InitDefaultsSealAccountReqImpl();
};
// -------------------------------------------------------------------

class SealAccountAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SealAccountAck) */ {
 public:
  SealAccountAck();
  virtual ~SealAccountAck();

  SealAccountAck(const SealAccountAck& from);

  inline SealAccountAck& operator=(const SealAccountAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealAccountAck(SealAccountAck&& from) noexcept
    : SealAccountAck() {
    *this = ::std::move(from);
  }

  inline SealAccountAck& operator=(SealAccountAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealAccountAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SealAccountAck* internal_default_instance() {
    return reinterpret_cast<const SealAccountAck*>(
               &_SealAccountAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SealAccountAck* other);
  friend void swap(SealAccountAck& a, SealAccountAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealAccountAck* New() const PROTOBUF_FINAL { return New(NULL); }

  SealAccountAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealAccountAck& from);
  void MergeFrom(const SealAccountAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealAccountAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 2;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 2;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // uint64 AccountID = 3;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 3;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SealAccountAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fAccount_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fAccount_2eproto::InitDefaultsSealAccountAckImpl();
};
// -------------------------------------------------------------------

class AccountRegReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountRegReq) */ {
 public:
  AccountRegReq();
  virtual ~AccountRegReq();

  AccountRegReq(const AccountRegReq& from);

  inline AccountRegReq& operator=(const AccountRegReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegReq(AccountRegReq&& from) noexcept
    : AccountRegReq() {
    *this = ::std::move(from);
  }

  inline AccountRegReq& operator=(AccountRegReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegReq* internal_default_instance() {
    return reinterpret_cast<const AccountRegReq*>(
               &_AccountRegReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AccountRegReq* other);
  friend void swap(AccountRegReq& a, AccountRegReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountRegReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountRegReq& from);
  void MergeFrom(const AccountRegReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountRegReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AccountName = 1;
  void clear_accountname();
  static const int kAccountNameFieldNumber = 1;
  const ::std::string& accountname() const;
  void set_accountname(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname(::std::string&& value);
  #endif
  void set_accountname(const char* value);
  void set_accountname(const char* value, size_t size);
  ::std::string* mutable_accountname();
  ::std::string* release_accountname();
  void set_allocated_accountname(::std::string* accountname);

  // string Password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string ClientVerion = 4;
  void clear_clientverion();
  static const int kClientVerionFieldNumber = 4;
  const ::std::string& clientverion() const;
  void set_clientverion(const ::std::string& value);
  #if LANG_CXX11
  void set_clientverion(::std::string&& value);
  #endif
  void set_clientverion(const char* value);
  void set_clientverion(const char* value, size_t size);
  ::std::string* mutable_clientverion();
  ::std::string* release_clientverion();
  void set_allocated_clientverion(::std::string* clientverion);

  // int32 Channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AccountRegReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accountname_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr clientverion_;
  ::google::protobuf::int32 channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fAccount_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fAccount_2eproto::InitDefaultsAccountRegReqImpl();
};
// -------------------------------------------------------------------

class AccountRegAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountRegAck) */ {
 public:
  AccountRegAck();
  virtual ~AccountRegAck();

  AccountRegAck(const AccountRegAck& from);

  inline AccountRegAck& operator=(const AccountRegAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AccountRegAck(AccountRegAck&& from) noexcept
    : AccountRegAck() {
    *this = ::std::move(from);
  }

  inline AccountRegAck& operator=(AccountRegAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AccountRegAck* internal_default_instance() {
    return reinterpret_cast<const AccountRegAck*>(
               &_AccountRegAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AccountRegAck* other);
  friend void swap(AccountRegAck& a, AccountRegAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AccountRegAck* New() const PROTOBUF_FINAL { return New(NULL); }

  AccountRegAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccountRegAck& from);
  void MergeFrom(const AccountRegAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccountRegAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 AccountID = 2;
  void clear_accountid();
  static const int kAccountIDFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint32 RetCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:AccountRegAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fAccount_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fAccount_2eproto::InitDefaultsAccountRegAckImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AccountLoginReq

// string AccountName = 1;
inline void AccountLoginReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.AccountName)
  return accountname_.GetNoArena();
}
inline void AccountLoginReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.AccountName)
}
#if LANG_CXX11
inline void AccountLoginReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.AccountName)
}
#endif
inline void AccountLoginReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.AccountName)
}
inline void AccountLoginReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.AccountName)
}
inline ::std::string* AccountLoginReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.AccountName)
}

// string Password = 2;
inline void AccountLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::password() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Password)
  return password_.GetNoArena();
}
inline void AccountLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.Password)
}
#if LANG_CXX11
inline void AccountLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.Password)
}
#endif
inline void AccountLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.Password)
}
inline void AccountLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.Password)
}
inline ::std::string* AccountLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.Password)
}

// int32 Channel = 3;
inline void AccountLoginReq::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 AccountLoginReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.Channel)
  return channel_;
}
inline void AccountLoginReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginReq.Channel)
}

// string ClientVerion = 4;
inline void AccountLoginReq::clear_clientverion() {
  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginReq::clientverion() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.ClientVerion)
  return clientverion_.GetNoArena();
}
inline void AccountLoginReq::set_clientverion(const ::std::string& value) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginReq.ClientVerion)
}
#if LANG_CXX11
inline void AccountLoginReq::set_clientverion(::std::string&& value) {
  
  clientverion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginReq.ClientVerion)
}
#endif
inline void AccountLoginReq::set_clientverion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginReq.ClientVerion)
}
inline void AccountLoginReq::set_clientverion(const char* value, size_t size) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginReq.ClientVerion)
}
inline ::std::string* AccountLoginReq::mutable_clientverion() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginReq.ClientVerion)
  return clientverion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginReq::release_clientverion() {
  // @@protoc_insertion_point(field_release:AccountLoginReq.ClientVerion)
  
  return clientverion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginReq::set_allocated_clientverion(::std::string* clientverion) {
  if (clientverion != NULL) {
    
  } else {
    
  }
  clientverion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientverion);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginReq.ClientVerion)
}

// uint32 FromChannel = 5;
inline void AccountLoginReq::clear_fromchannel() {
  fromchannel_ = 0u;
}
inline ::google::protobuf::uint32 AccountLoginReq::fromchannel() const {
  // @@protoc_insertion_point(field_get:AccountLoginReq.FromChannel)
  return fromchannel_;
}
inline void AccountLoginReq::set_fromchannel(::google::protobuf::uint32 value) {
  
  fromchannel_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginReq.FromChannel)
}

// -------------------------------------------------------------------

// AccountLoginAck

// uint32 RetCode = 1;
inline void AccountLoginAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 AccountLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.RetCode)
  return retcode_;
}
inline void AccountLoginAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.RetCode)
}

// uint64 AccountID = 2;
inline void AccountLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AccountLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.AccountID)
  return accountid_;
}
inline void AccountLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.AccountID)
}

// int32 LastSvrID = 3;
inline void AccountLoginAck::clear_lastsvrid() {
  lastsvrid_ = 0;
}
inline ::google::protobuf::int32 AccountLoginAck::lastsvrid() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrID)
  return lastsvrid_;
}
inline void AccountLoginAck::set_lastsvrid(::google::protobuf::int32 value) {
  
  lastsvrid_ = value;
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrID)
}

// string LastSvrName = 4;
inline void AccountLoginAck::clear_lastsvrname() {
  lastsvrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountLoginAck::lastsvrname() const {
  // @@protoc_insertion_point(field_get:AccountLoginAck.LastSvrName)
  return lastsvrname_.GetNoArena();
}
inline void AccountLoginAck::set_lastsvrname(const ::std::string& value) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountLoginAck.LastSvrName)
}
#if LANG_CXX11
inline void AccountLoginAck::set_lastsvrname(::std::string&& value) {
  
  lastsvrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountLoginAck.LastSvrName)
}
#endif
inline void AccountLoginAck::set_lastsvrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountLoginAck.LastSvrName)
}
inline void AccountLoginAck::set_lastsvrname(const char* value, size_t size) {
  
  lastsvrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountLoginAck.LastSvrName)
}
inline ::std::string* AccountLoginAck::mutable_lastsvrname() {
  
  // @@protoc_insertion_point(field_mutable:AccountLoginAck.LastSvrName)
  return lastsvrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountLoginAck::release_lastsvrname() {
  // @@protoc_insertion_point(field_release:AccountLoginAck.LastSvrName)
  
  return lastsvrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountLoginAck::set_allocated_lastsvrname(::std::string* lastsvrname) {
  if (lastsvrname != NULL) {
    
  } else {
    
  }
  lastsvrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastsvrname);
  // @@protoc_insertion_point(field_set_allocated:AccountLoginAck.LastSvrName)
}

// -------------------------------------------------------------------

// SealAccountReq

// string AccountName = 1;
inline void SealAccountReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SealAccountReq::accountname() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.AccountName)
  return accountname_.GetNoArena();
}
inline void SealAccountReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SealAccountReq.AccountName)
}
#if LANG_CXX11
inline void SealAccountReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SealAccountReq.AccountName)
}
#endif
inline void SealAccountReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SealAccountReq.AccountName)
}
inline void SealAccountReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SealAccountReq.AccountName)
}
inline ::std::string* SealAccountReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:SealAccountReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SealAccountReq::release_accountname() {
  // @@protoc_insertion_point(field_release:SealAccountReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SealAccountReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:SealAccountReq.AccountName)
}

// uint64 AccountID = 2;
inline void SealAccountReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SealAccountReq::accountid() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.AccountID)
  return accountid_;
}
inline void SealAccountReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.AccountID)
}

// int32 Channel = 3;
inline void SealAccountReq::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 SealAccountReq::channel() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.Channel)
  return channel_;
}
inline void SealAccountReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.Channel)
}

// int32 SealTime = 4;
inline void SealAccountReq::clear_sealtime() {
  sealtime_ = 0;
}
inline ::google::protobuf::int32 SealAccountReq::sealtime() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.SealTime)
  return sealtime_;
}
inline void SealAccountReq::set_sealtime(::google::protobuf::int32 value) {
  
  sealtime_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.SealTime)
}

// bool Seal = 5;
inline void SealAccountReq::clear_seal() {
  seal_ = false;
}
inline bool SealAccountReq::seal() const {
  // @@protoc_insertion_point(field_get:SealAccountReq.Seal)
  return seal_;
}
inline void SealAccountReq::set_seal(bool value) {
  
  seal_ = value;
  // @@protoc_insertion_point(field_set:SealAccountReq.Seal)
}

// -------------------------------------------------------------------

// SealAccountAck

// uint32 RetCode = 1;
inline void SealAccountAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 SealAccountAck::retcode() const {
  // @@protoc_insertion_point(field_get:SealAccountAck.RetCode)
  return retcode_;
}
inline void SealAccountAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:SealAccountAck.RetCode)
}

// string AccountName = 2;
inline void SealAccountAck::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SealAccountAck::accountname() const {
  // @@protoc_insertion_point(field_get:SealAccountAck.AccountName)
  return accountname_.GetNoArena();
}
inline void SealAccountAck::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SealAccountAck.AccountName)
}
#if LANG_CXX11
inline void SealAccountAck::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SealAccountAck.AccountName)
}
#endif
inline void SealAccountAck::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SealAccountAck.AccountName)
}
inline void SealAccountAck::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SealAccountAck.AccountName)
}
inline ::std::string* SealAccountAck::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:SealAccountAck.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SealAccountAck::release_accountname() {
  // @@protoc_insertion_point(field_release:SealAccountAck.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SealAccountAck::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:SealAccountAck.AccountName)
}

// uint64 AccountID = 3;
inline void SealAccountAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SealAccountAck::accountid() const {
  // @@protoc_insertion_point(field_get:SealAccountAck.AccountID)
  return accountid_;
}
inline void SealAccountAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:SealAccountAck.AccountID)
}

// -------------------------------------------------------------------

// AccountRegReq

// string AccountName = 1;
inline void AccountRegReq::clear_accountname() {
  accountname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegReq::accountname() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.AccountName)
  return accountname_.GetNoArena();
}
inline void AccountRegReq::set_accountname(const ::std::string& value) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.AccountName)
}
#if LANG_CXX11
inline void AccountRegReq::set_accountname(::std::string&& value) {
  
  accountname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.AccountName)
}
#endif
inline void AccountRegReq::set_accountname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.AccountName)
}
inline void AccountRegReq::set_accountname(const char* value, size_t size) {
  
  accountname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.AccountName)
}
inline ::std::string* AccountRegReq::mutable_accountname() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.AccountName)
  return accountname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegReq::release_accountname() {
  // @@protoc_insertion_point(field_release:AccountRegReq.AccountName)
  
  return accountname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegReq::set_allocated_accountname(::std::string* accountname) {
  if (accountname != NULL) {
    
  } else {
    
  }
  accountname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.AccountName)
}

// string Password = 2;
inline void AccountRegReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegReq::password() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Password)
  return password_.GetNoArena();
}
inline void AccountRegReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.Password)
}
#if LANG_CXX11
inline void AccountRegReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.Password)
}
#endif
inline void AccountRegReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.Password)
}
inline void AccountRegReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.Password)
}
inline ::std::string* AccountRegReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.Password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegReq::release_password() {
  // @@protoc_insertion_point(field_release:AccountRegReq.Password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.Password)
}

// int32 Channel = 3;
inline void AccountRegReq::clear_channel() {
  channel_ = 0;
}
inline ::google::protobuf::int32 AccountRegReq::channel() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.Channel)
  return channel_;
}
inline void AccountRegReq::set_channel(::google::protobuf::int32 value) {
  
  channel_ = value;
  // @@protoc_insertion_point(field_set:AccountRegReq.Channel)
}

// string ClientVerion = 4;
inline void AccountRegReq::clear_clientverion() {
  clientverion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AccountRegReq::clientverion() const {
  // @@protoc_insertion_point(field_get:AccountRegReq.ClientVerion)
  return clientverion_.GetNoArena();
}
inline void AccountRegReq::set_clientverion(const ::std::string& value) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountRegReq.ClientVerion)
}
#if LANG_CXX11
inline void AccountRegReq::set_clientverion(::std::string&& value) {
  
  clientverion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountRegReq.ClientVerion)
}
#endif
inline void AccountRegReq::set_clientverion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountRegReq.ClientVerion)
}
inline void AccountRegReq::set_clientverion(const char* value, size_t size) {
  
  clientverion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountRegReq.ClientVerion)
}
inline ::std::string* AccountRegReq::mutable_clientverion() {
  
  // @@protoc_insertion_point(field_mutable:AccountRegReq.ClientVerion)
  return clientverion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AccountRegReq::release_clientverion() {
  // @@protoc_insertion_point(field_release:AccountRegReq.ClientVerion)
  
  return clientverion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AccountRegReq::set_allocated_clientverion(::std::string* clientverion) {
  if (clientverion != NULL) {
    
  } else {
    
  }
  clientverion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientverion);
  // @@protoc_insertion_point(field_set_allocated:AccountRegReq.ClientVerion)
}

// -------------------------------------------------------------------

// AccountRegAck

// uint32 RetCode = 1;
inline void AccountRegAck::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 AccountRegAck::retcode() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.RetCode)
  return retcode_;
}
inline void AccountRegAck::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.RetCode)
}

// uint64 AccountID = 2;
inline void AccountRegAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AccountRegAck::accountid() const {
  // @@protoc_insertion_point(field_get:AccountRegAck.AccountID)
  return accountid_;
}
inline void AccountRegAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:AccountRegAck.AccountID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Msg_5fAccount_2eproto__INCLUDED
