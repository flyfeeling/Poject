// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_DB.proto

#include "Msg_DB.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class DBRoleDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleData>
      _instance;
} _DBRoleData_default_instance_;
class DBRoleLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DBRoleLoginAck>
      _instance;
} _DBRoleLoginAck_default_instance_;
namespace protobuf_Msg_5fDB_2eproto {
void InitDefaultsDBRoleDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::_DBRoleData_default_instance_;
    new (ptr) ::DBRoleData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBRoleData::InitAsDefaultInstance();
}

void InitDefaultsDBRoleData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBRoleDataImpl);
}

void InitDefaultsDBRoleLoginAckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  protobuf_Msg_5fDB_2eproto::InitDefaultsDBRoleData();
  {
    void* ptr = &::_DBRoleLoginAck_default_instance_;
    new (ptr) ::DBRoleLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DBRoleLoginAck::InitAsDefaultInstance();
}

void InitDefaultsDBRoleLoginAck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDBRoleLoginAckImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, carrerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, langid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, viplvl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, vipexp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, fightvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, citycopyid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, actime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, logontime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleData, logofftime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DBRoleLoginAck, roledata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DBRoleData)},
  { 21, -1, sizeof(::DBRoleLoginAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBRoleData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DBRoleLoginAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Msg_DB.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014Msg_DB.proto\"\236\002\n\nDBRoleData\022\021\n\tAccount"
      "ID\030\001 \001(\004\022\016\n\006RoleID\030\002 \001(\004\022\020\n\010CarrerID\030\003 \001"
      "(\005\022\r\n\005Level\030\004 \001(\005\022\013\n\003Exp\030\005 \001(\003\022\014\n\004Name\030\006"
      " \001(\t\022\016\n\006LangID\030\007 \001(\005\022\016\n\006VipLvl\030\010 \001(\005\022\016\n\006"
      "VipExp\030\t \001(\005\022\022\n\nFightValue\030\n \001(\003\022\022\n\nCity"
      "CopyID\030\013 \001(\005\022\016\n\006Action\030\014 \003(\003\022\016\n\006Actime\030\r"
      " \003(\003\022\022\n\nCreateTime\030\016 \001(\004\022\021\n\tLogonTime\030\017 "
      "\001(\004\022\022\n\nLogoffTime\030\020 \001(\004\"P\n\016DBRoleLoginAc"
      "k\022\017\n\007RetCode\030\001 \001(\r\022\016\n\006RoleID\030\002 \001(\004\022\035\n\010Ro"
      "leData\030\003 \001(\0132\013.DBRoleDatab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 393);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Msg_DB.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Msg_5fDB_2eproto

// ===================================================================

void DBRoleData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleData::kAccountIDFieldNumber;
const int DBRoleData::kRoleIDFieldNumber;
const int DBRoleData::kCarrerIDFieldNumber;
const int DBRoleData::kLevelFieldNumber;
const int DBRoleData::kExpFieldNumber;
const int DBRoleData::kNameFieldNumber;
const int DBRoleData::kLangIDFieldNumber;
const int DBRoleData::kVipLvlFieldNumber;
const int DBRoleData::kVipExpFieldNumber;
const int DBRoleData::kFightValueFieldNumber;
const int DBRoleData::kCityCopyIDFieldNumber;
const int DBRoleData::kActionFieldNumber;
const int DBRoleData::kActimeFieldNumber;
const int DBRoleData::kCreateTimeFieldNumber;
const int DBRoleData::kLogonTimeFieldNumber;
const int DBRoleData::kLogoffTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleData::DBRoleData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fDB_2eproto::InitDefaultsDBRoleData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBRoleData)
}
DBRoleData::DBRoleData(const DBRoleData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      action_(from.action_),
      actime_(from.actime_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&logofftime_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(logofftime_));
  // @@protoc_insertion_point(copy_constructor:DBRoleData)
}

void DBRoleData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logofftime_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logofftime_));
  _cached_size_ = 0;
}

DBRoleData::~DBRoleData() {
  // @@protoc_insertion_point(destructor:DBRoleData)
  SharedDtor();
}

void DBRoleData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBRoleData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleData::descriptor() {
  ::protobuf_Msg_5fDB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fDB_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBRoleData& DBRoleData::default_instance() {
  ::protobuf_Msg_5fDB_2eproto::InitDefaultsDBRoleData();
  return *internal_default_instance();
}

DBRoleData* DBRoleData::New(::google::protobuf::Arena* arena) const {
  DBRoleData* n = new DBRoleData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBRoleData::Clear() {
// @@protoc_insertion_point(message_clear_start:DBRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.Clear();
  actime_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&logofftime_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(logofftime_));
  _internal_metadata_.Clear();
}

bool DBRoleData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBRoleData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 AccountID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CarrerID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carrerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 Exp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DBRoleData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 LangID = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &langid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VipLvl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 VipExp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vipexp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 FightValue = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fightvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CityCopyID = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &citycopyid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Action = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_action())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 98u, input, this->mutable_action())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 Actime = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_actime())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 106u, input, this->mutable_actime())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 CreateTime = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 LogonTime = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logontime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 LogoffTime = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &logofftime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBRoleData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBRoleData)
  return false;
#undef DO_
}

void DBRoleData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->accountid(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->carrerid(), output);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->level(), output);
  }

  // int64 Exp = 5;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exp(), output);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBRoleData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // int32 LangID = 7;
  if (this->langid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->langid(), output);
  }

  // int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->viplvl(), output);
  }

  // int32 VipExp = 9;
  if (this->vipexp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->vipexp(), output);
  }

  // int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->fightvalue(), output);
  }

  // int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->citycopyid(), output);
  }

  // repeated int64 Action = 12;
  if (this->action_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _action_cached_byte_size_));
  }
  for (int i = 0, n = this->action_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->action(i), output);
  }

  // repeated int64 Actime = 13;
  if (this->actime_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _actime_cached_byte_size_));
  }
  for (int i = 0, n = this->actime_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->actime(i), output);
  }

  // uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->createtime(), output);
  }

  // uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->logontime(), output);
  }

  // uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->logofftime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBRoleData)
}

::google::protobuf::uint8* DBRoleData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBRoleData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->accountid(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->carrerid(), target);
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->level(), target);
  }

  // int64 Exp = 5;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exp(), target);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DBRoleData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // int32 LangID = 7;
  if (this->langid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->langid(), target);
  }

  // int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->viplvl(), target);
  }

  // int32 VipExp = 9;
  if (this->vipexp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->vipexp(), target);
  }

  // int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->fightvalue(), target);
  }

  // int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->citycopyid(), target);
  }

  // repeated int64 Action = 12;
  if (this->action_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _action_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->action_, target);
  }

  // repeated int64 Actime = 13;
  if (this->actime_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _actime_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->actime_, target);
  }

  // uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->createtime(), target);
  }

  // uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->logontime(), target);
  }

  // uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->logofftime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBRoleData)
  return target;
}

size_t DBRoleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBRoleData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 Action = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->action_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _action_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 Actime = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->actime_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _actime_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 AccountID = 1;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // int32 CarrerID = 3;
  if (this->carrerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->carrerid());
  }

  // int32 Level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // int64 Exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());
  }

  // int32 LangID = 7;
  if (this->langid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->langid());
  }

  // int32 VipLvl = 8;
  if (this->viplvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->viplvl());
  }

  // int64 FightValue = 10;
  if (this->fightvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fightvalue());
  }

  // int32 VipExp = 9;
  if (this->vipexp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vipexp());
  }

  // int32 CityCopyID = 11;
  if (this->citycopyid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->citycopyid());
  }

  // uint64 CreateTime = 14;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->createtime());
  }

  // uint64 LogonTime = 15;
  if (this->logontime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logontime());
  }

  // uint64 LogoffTime = 16;
  if (this->logofftime() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->logofftime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBRoleData)
  GOOGLE_DCHECK_NE(&from, this);
  const DBRoleData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBRoleData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBRoleData)
    MergeFrom(*source);
  }
}

void DBRoleData::MergeFrom(const DBRoleData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBRoleData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  action_.MergeFrom(from.action_);
  actime_.MergeFrom(from.actime_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.carrerid() != 0) {
    set_carrerid(from.carrerid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.langid() != 0) {
    set_langid(from.langid());
  }
  if (from.viplvl() != 0) {
    set_viplvl(from.viplvl());
  }
  if (from.fightvalue() != 0) {
    set_fightvalue(from.fightvalue());
  }
  if (from.vipexp() != 0) {
    set_vipexp(from.vipexp());
  }
  if (from.citycopyid() != 0) {
    set_citycopyid(from.citycopyid());
  }
  if (from.createtime() != 0) {
    set_createtime(from.createtime());
  }
  if (from.logontime() != 0) {
    set_logontime(from.logontime());
  }
  if (from.logofftime() != 0) {
    set_logofftime(from.logofftime());
  }
}

void DBRoleData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleData::CopyFrom(const DBRoleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBRoleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleData::IsInitialized() const {
  return true;
}

void DBRoleData::Swap(DBRoleData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleData::InternalSwap(DBRoleData* other) {
  using std::swap;
  action_.InternalSwap(&other->action_);
  actime_.InternalSwap(&other->actime_);
  name_.Swap(&other->name_);
  swap(accountid_, other->accountid_);
  swap(roleid_, other->roleid_);
  swap(carrerid_, other->carrerid_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(langid_, other->langid_);
  swap(viplvl_, other->viplvl_);
  swap(fightvalue_, other->fightvalue_);
  swap(vipexp_, other->vipexp_);
  swap(citycopyid_, other->citycopyid_);
  swap(createtime_, other->createtime_);
  swap(logontime_, other->logontime_);
  swap(logofftime_, other->logofftime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBRoleData::GetMetadata() const {
  protobuf_Msg_5fDB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fDB_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DBRoleLoginAck::InitAsDefaultInstance() {
  ::_DBRoleLoginAck_default_instance_._instance.get_mutable()->roledata_ = const_cast< ::DBRoleData*>(
      ::DBRoleData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBRoleLoginAck::kRetCodeFieldNumber;
const int DBRoleLoginAck::kRoleIDFieldNumber;
const int DBRoleLoginAck::kRoleDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBRoleLoginAck::DBRoleLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Msg_5fDB_2eproto::InitDefaultsDBRoleLoginAck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DBRoleLoginAck)
}
DBRoleLoginAck::DBRoleLoginAck(const DBRoleLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_roledata()) {
    roledata_ = new ::DBRoleData(*from.roledata_);
  } else {
    roledata_ = NULL;
  }
  ::memcpy(&roleid_, &from.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&roleid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:DBRoleLoginAck)
}

void DBRoleLoginAck::SharedCtor() {
  ::memset(&roledata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roledata_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

DBRoleLoginAck::~DBRoleLoginAck() {
  // @@protoc_insertion_point(destructor:DBRoleLoginAck)
  SharedDtor();
}

void DBRoleLoginAck::SharedDtor() {
  if (this != internal_default_instance()) delete roledata_;
}

void DBRoleLoginAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBRoleLoginAck::descriptor() {
  ::protobuf_Msg_5fDB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fDB_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBRoleLoginAck& DBRoleLoginAck::default_instance() {
  ::protobuf_Msg_5fDB_2eproto::InitDefaultsDBRoleLoginAck();
  return *internal_default_instance();
}

DBRoleLoginAck* DBRoleLoginAck::New(::google::protobuf::Arena* arena) const {
  DBRoleLoginAck* n = new DBRoleLoginAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBRoleLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:DBRoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && roledata_ != NULL) {
    delete roledata_;
  }
  roledata_ = NULL;
  ::memset(&roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&roleid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool DBRoleLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DBRoleLoginAck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 RetCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RoleID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DBRoleData RoleData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_roledata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DBRoleLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DBRoleLoginAck)
  return false;
#undef DO_
}

void DBRoleLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DBRoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roleid(), output);
  }

  // .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->roledata_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DBRoleLoginAck)
}

::google::protobuf::uint8* DBRoleLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DBRoleLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roleid(), target);
  }

  // .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->roledata_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DBRoleLoginAck)
  return target;
}

size_t DBRoleLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DBRoleLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .DBRoleData RoleData = 3;
  if (this->has_roledata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->roledata_);
  }

  // uint64 RoleID = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roleid());
  }

  // uint32 RetCode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBRoleLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DBRoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const DBRoleLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBRoleLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DBRoleLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DBRoleLoginAck)
    MergeFrom(*source);
  }
}

void DBRoleLoginAck::MergeFrom(const DBRoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DBRoleLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roledata()) {
    mutable_roledata()->::DBRoleData::MergeFrom(from.roledata());
  }
  if (from.roleid() != 0) {
    set_roleid(from.roleid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void DBRoleLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DBRoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBRoleLoginAck::CopyFrom(const DBRoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DBRoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBRoleLoginAck::IsInitialized() const {
  return true;
}

void DBRoleLoginAck::Swap(DBRoleLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBRoleLoginAck::InternalSwap(DBRoleLoginAck* other) {
  using std::swap;
  swap(roledata_, other->roledata_);
  swap(roleid_, other->roleid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBRoleLoginAck::GetMetadata() const {
  protobuf_Msg_5fDB_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Msg_5fDB_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
