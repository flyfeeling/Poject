// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Msg_Battle.proto

#ifndef PROTOBUF_Msg_5fBattle_2eproto__INCLUDED
#define PROTOBUF_Msg_5fBattle_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Msg_5fBattle_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsClientLoginGsReqImpl();
void InitDefaultsClientLoginGsReq();
void InitDefaultsClientLoginGsAckImpl();
void InitDefaultsClientLoginGsAck();
void InitDefaultsCreateRoomReqImpl();
void InitDefaultsCreateRoomReq();
void InitDefaultsCreateRoomAckImpl();
void InitDefaultsCreateRoomAck();
void InitDefaultsReadyToBattleReqImpl();
void InitDefaultsReadyToBattleReq();
void InitDefaultsReadyToBattleAckImpl();
void InitDefaultsReadyToBattleAck();
void InitDefaultsPositionImpl();
void InitDefaultsPosition();
void InitDefaultsFindPathReqImpl();
void InitDefaultsFindPathReq();
void InitDefaultsFindPathAckImpl();
void InitDefaultsFindPathAck();
inline void InitDefaults() {
  InitDefaultsClientLoginGsReq();
  InitDefaultsClientLoginGsAck();
  InitDefaultsCreateRoomReq();
  InitDefaultsCreateRoomAck();
  InitDefaultsReadyToBattleReq();
  InitDefaultsReadyToBattleAck();
  InitDefaultsPosition();
  InitDefaultsFindPathReq();
  InitDefaultsFindPathAck();
}
}  // namespace protobuf_Msg_5fBattle_2eproto
class ClientLoginGsAck;
class ClientLoginGsAckDefaultTypeInternal;
extern ClientLoginGsAckDefaultTypeInternal _ClientLoginGsAck_default_instance_;
class ClientLoginGsReq;
class ClientLoginGsReqDefaultTypeInternal;
extern ClientLoginGsReqDefaultTypeInternal _ClientLoginGsReq_default_instance_;
class CreateRoomAck;
class CreateRoomAckDefaultTypeInternal;
extern CreateRoomAckDefaultTypeInternal _CreateRoomAck_default_instance_;
class CreateRoomReq;
class CreateRoomReqDefaultTypeInternal;
extern CreateRoomReqDefaultTypeInternal _CreateRoomReq_default_instance_;
class FindPathAck;
class FindPathAckDefaultTypeInternal;
extern FindPathAckDefaultTypeInternal _FindPathAck_default_instance_;
class FindPathReq;
class FindPathReqDefaultTypeInternal;
extern FindPathReqDefaultTypeInternal _FindPathReq_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class ReadyToBattleAck;
class ReadyToBattleAckDefaultTypeInternal;
extern ReadyToBattleAckDefaultTypeInternal _ReadyToBattleAck_default_instance_;
class ReadyToBattleReq;
class ReadyToBattleReqDefaultTypeInternal;
extern ReadyToBattleReqDefaultTypeInternal _ReadyToBattleReq_default_instance_;

enum BattleType {
  T_Battle_None = 0,
  T_Battle_Robot = 1,
  BattleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BattleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BattleType_IsValid(int value);
const BattleType BattleType_MIN = T_Battle_None;
const BattleType BattleType_MAX = T_Battle_Robot;
const int BattleType_ARRAYSIZE = BattleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BattleType_descriptor();
inline const ::std::string& BattleType_Name(BattleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BattleType_descriptor(), value);
}
inline bool BattleType_Parse(
    const ::std::string& name, BattleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattleType>(
    BattleType_descriptor(), name, value);
}
// ===================================================================

class ClientLoginGsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientLoginGsReq) */ {
 public:
  ClientLoginGsReq();
  virtual ~ClientLoginGsReq();

  ClientLoginGsReq(const ClientLoginGsReq& from);

  inline ClientLoginGsReq& operator=(const ClientLoginGsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientLoginGsReq(ClientLoginGsReq&& from) noexcept
    : ClientLoginGsReq() {
    *this = ::std::move(from);
  }

  inline ClientLoginGsReq& operator=(ClientLoginGsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginGsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientLoginGsReq* internal_default_instance() {
    return reinterpret_cast<const ClientLoginGsReq*>(
               &_ClientLoginGsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ClientLoginGsReq* other);
  friend void swap(ClientLoginGsReq& a, ClientLoginGsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientLoginGsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientLoginGsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientLoginGsReq& from);
  void MergeFrom(const ClientLoginGsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientLoginGsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 accountId = 1;
  void clear_accountid();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ClientLoginGsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 accountid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsClientLoginGsReqImpl();
};
// -------------------------------------------------------------------

class ClientLoginGsAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientLoginGsAck) */ {
 public:
  ClientLoginGsAck();
  virtual ~ClientLoginGsAck();

  ClientLoginGsAck(const ClientLoginGsAck& from);

  inline ClientLoginGsAck& operator=(const ClientLoginGsAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientLoginGsAck(ClientLoginGsAck&& from) noexcept
    : ClientLoginGsAck() {
    *this = ::std::move(from);
  }

  inline ClientLoginGsAck& operator=(ClientLoginGsAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientLoginGsAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientLoginGsAck* internal_default_instance() {
    return reinterpret_cast<const ClientLoginGsAck*>(
               &_ClientLoginGsAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ClientLoginGsAck* other);
  friend void swap(ClientLoginGsAck& a, ClientLoginGsAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientLoginGsAck* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientLoginGsAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientLoginGsAck& from);
  void MergeFrom(const ClientLoginGsAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientLoginGsAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ClientLoginGsAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsClientLoginGsAckImpl();
};
// -------------------------------------------------------------------

class CreateRoomReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRoomReq) */ {
 public:
  CreateRoomReq();
  virtual ~CreateRoomReq();

  CreateRoomReq(const CreateRoomReq& from);

  inline CreateRoomReq& operator=(const CreateRoomReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRoomReq(CreateRoomReq&& from) noexcept
    : CreateRoomReq() {
    *this = ::std::move(from);
  }

  inline CreateRoomReq& operator=(CreateRoomReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRoomReq* internal_default_instance() {
    return reinterpret_cast<const CreateRoomReq*>(
               &_CreateRoomReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateRoomReq* other);
  friend void swap(CreateRoomReq& a, CreateRoomReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRoomReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomReq& from);
  void MergeFrom(const CreateRoomReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 mapid = 1;
  void clear_mapid();
  static const int kMapidFieldNumber = 1;
  ::google::protobuf::int32 mapid() const;
  void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CreateRoomReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 mapid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsCreateRoomReqImpl();
};
// -------------------------------------------------------------------

class CreateRoomAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRoomAck) */ {
 public:
  CreateRoomAck();
  virtual ~CreateRoomAck();

  CreateRoomAck(const CreateRoomAck& from);

  inline CreateRoomAck& operator=(const CreateRoomAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRoomAck(CreateRoomAck&& from) noexcept
    : CreateRoomAck() {
    *this = ::std::move(from);
  }

  inline CreateRoomAck& operator=(CreateRoomAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRoomAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRoomAck* internal_default_instance() {
    return reinterpret_cast<const CreateRoomAck*>(
               &_CreateRoomAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CreateRoomAck* other);
  friend void swap(CreateRoomAck& a, CreateRoomAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRoomAck* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRoomAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRoomAck& from);
  void MergeFrom(const CreateRoomAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRoomAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint32 roomid() const;
  void set_roomid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CreateRoomAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 roomid_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsCreateRoomAckImpl();
};
// -------------------------------------------------------------------

class ReadyToBattleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReadyToBattleReq) */ {
 public:
  ReadyToBattleReq();
  virtual ~ReadyToBattleReq();

  ReadyToBattleReq(const ReadyToBattleReq& from);

  inline ReadyToBattleReq& operator=(const ReadyToBattleReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadyToBattleReq(ReadyToBattleReq&& from) noexcept
    : ReadyToBattleReq() {
    *this = ::std::move(from);
  }

  inline ReadyToBattleReq& operator=(ReadyToBattleReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyToBattleReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadyToBattleReq* internal_default_instance() {
    return reinterpret_cast<const ReadyToBattleReq*>(
               &_ReadyToBattleReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ReadyToBattleReq* other);
  friend void swap(ReadyToBattleReq& a, ReadyToBattleReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadyToBattleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadyToBattleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadyToBattleReq& from);
  void MergeFrom(const ReadyToBattleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadyToBattleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 battleType = 1;
  void clear_battletype();
  static const int kBattleTypeFieldNumber = 1;
  ::google::protobuf::int32 battletype() const;
  void set_battletype(::google::protobuf::int32 value);

  // int32 robotCount = 2;
  void clear_robotcount();
  static const int kRobotCountFieldNumber = 2;
  ::google::protobuf::int32 robotcount() const;
  void set_robotcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReadyToBattleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 battletype_;
  ::google::protobuf::int32 robotcount_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsReadyToBattleReqImpl();
};
// -------------------------------------------------------------------

class ReadyToBattleAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReadyToBattleAck) */ {
 public:
  ReadyToBattleAck();
  virtual ~ReadyToBattleAck();

  ReadyToBattleAck(const ReadyToBattleAck& from);

  inline ReadyToBattleAck& operator=(const ReadyToBattleAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadyToBattleAck(ReadyToBattleAck&& from) noexcept
    : ReadyToBattleAck() {
    *this = ::std::move(from);
  }

  inline ReadyToBattleAck& operator=(ReadyToBattleAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadyToBattleAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadyToBattleAck* internal_default_instance() {
    return reinterpret_cast<const ReadyToBattleAck*>(
               &_ReadyToBattleAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ReadyToBattleAck* other);
  friend void swap(ReadyToBattleAck& a, ReadyToBattleAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadyToBattleAck* New() const PROTOBUF_FINAL { return New(NULL); }

  ReadyToBattleAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReadyToBattleAck& from);
  void MergeFrom(const ReadyToBattleAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReadyToBattleAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 roleid = 2;
  int roleid_size() const;
  void clear_roleid();
  static const int kRoleidFieldNumber = 2;
  ::google::protobuf::uint32 roleid(int index) const;
  void set_roleid(int index, ::google::protobuf::uint32 value);
  void add_roleid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      roleid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_roleid();

  // int32 retCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReadyToBattleAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > roleid_;
  mutable int _roleid_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsReadyToBattleAckImpl();
};
// -------------------------------------------------------------------

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Position(Position&& from) noexcept
    : Position() {
    *this = ::std::move(from);
  }

  inline Position& operator=(Position&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Position* other);
  friend void swap(Position& a, Position& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Position* New() const PROTOBUF_FINAL { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Position)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsPositionImpl();
};
// -------------------------------------------------------------------

class FindPathReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FindPathReq) */ {
 public:
  FindPathReq();
  virtual ~FindPathReq();

  FindPathReq(const FindPathReq& from);

  inline FindPathReq& operator=(const FindPathReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FindPathReq(FindPathReq&& from) noexcept
    : FindPathReq() {
    *this = ::std::move(from);
  }

  inline FindPathReq& operator=(FindPathReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindPathReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FindPathReq* internal_default_instance() {
    return reinterpret_cast<const FindPathReq*>(
               &_FindPathReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(FindPathReq* other);
  friend void swap(FindPathReq& a, FindPathReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FindPathReq* New() const PROTOBUF_FINAL { return New(NULL); }

  FindPathReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FindPathReq& from);
  void MergeFrom(const FindPathReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FindPathReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Position spos = 1;
  bool has_spos() const;
  void clear_spos();
  static const int kSposFieldNumber = 1;
  const ::Position& spos() const;
  ::Position* mutable_spos();
  ::Position* release_spos();
  void set_allocated_spos(::Position* spos);

  // .Position epos = 2;
  bool has_epos() const;
  void clear_epos();
  static const int kEposFieldNumber = 2;
  const ::Position& epos() const;
  ::Position* mutable_epos();
  ::Position* release_epos();
  void set_allocated_epos(::Position* epos);

  // @@protoc_insertion_point(class_scope:FindPathReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Position* spos_;
  ::Position* epos_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsFindPathReqImpl();
};
// -------------------------------------------------------------------

class FindPathAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FindPathAck) */ {
 public:
  FindPathAck();
  virtual ~FindPathAck();

  FindPathAck(const FindPathAck& from);

  inline FindPathAck& operator=(const FindPathAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FindPathAck(FindPathAck&& from) noexcept
    : FindPathAck() {
    *this = ::std::move(from);
  }

  inline FindPathAck& operator=(FindPathAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindPathAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FindPathAck* internal_default_instance() {
    return reinterpret_cast<const FindPathAck*>(
               &_FindPathAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(FindPathAck* other);
  friend void swap(FindPathAck& a, FindPathAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FindPathAck* New() const PROTOBUF_FINAL { return New(NULL); }

  FindPathAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FindPathAck& from);
  void MergeFrom(const FindPathAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FindPathAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Position paths = 2;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 2;
  const ::Position& paths(int index) const;
  ::Position* mutable_paths(int index);
  ::Position* add_paths();
  ::google::protobuf::RepeatedPtrField< ::Position >*
      mutable_paths();
  const ::google::protobuf::RepeatedPtrField< ::Position >&
      paths() const;

  // int32 retCode = 1;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:FindPathAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Position > paths_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct ::protobuf_Msg_5fBattle_2eproto::TableStruct;
  friend void ::protobuf_Msg_5fBattle_2eproto::InitDefaultsFindPathAckImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ClientLoginGsReq

// uint32 accountId = 1;
inline void ClientLoginGsReq::clear_accountid() {
  accountid_ = 0u;
}
inline ::google::protobuf::uint32 ClientLoginGsReq::accountid() const {
  // @@protoc_insertion_point(field_get:ClientLoginGsReq.accountId)
  return accountid_;
}
inline void ClientLoginGsReq::set_accountid(::google::protobuf::uint32 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:ClientLoginGsReq.accountId)
}

// -------------------------------------------------------------------

// ClientLoginGsAck

// int32 retCode = 1;
inline void ClientLoginGsAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ClientLoginGsAck::retcode() const {
  // @@protoc_insertion_point(field_get:ClientLoginGsAck.retCode)
  return retcode_;
}
inline void ClientLoginGsAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ClientLoginGsAck.retCode)
}

// -------------------------------------------------------------------

// CreateRoomReq

// int32 mapid = 1;
inline void CreateRoomReq::clear_mapid() {
  mapid_ = 0;
}
inline ::google::protobuf::int32 CreateRoomReq::mapid() const {
  // @@protoc_insertion_point(field_get:CreateRoomReq.mapid)
  return mapid_;
}
inline void CreateRoomReq::set_mapid(::google::protobuf::int32 value) {
  
  mapid_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomReq.mapid)
}

// -------------------------------------------------------------------

// CreateRoomAck

// int32 retCode = 1;
inline void CreateRoomAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CreateRoomAck::retcode() const {
  // @@protoc_insertion_point(field_get:CreateRoomAck.retCode)
  return retcode_;
}
inline void CreateRoomAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomAck.retCode)
}

// uint32 roomid = 2;
inline void CreateRoomAck::clear_roomid() {
  roomid_ = 0u;
}
inline ::google::protobuf::uint32 CreateRoomAck::roomid() const {
  // @@protoc_insertion_point(field_get:CreateRoomAck.roomid)
  return roomid_;
}
inline void CreateRoomAck::set_roomid(::google::protobuf::uint32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:CreateRoomAck.roomid)
}

// -------------------------------------------------------------------

// ReadyToBattleReq

// int32 battleType = 1;
inline void ReadyToBattleReq::clear_battletype() {
  battletype_ = 0;
}
inline ::google::protobuf::int32 ReadyToBattleReq::battletype() const {
  // @@protoc_insertion_point(field_get:ReadyToBattleReq.battleType)
  return battletype_;
}
inline void ReadyToBattleReq::set_battletype(::google::protobuf::int32 value) {
  
  battletype_ = value;
  // @@protoc_insertion_point(field_set:ReadyToBattleReq.battleType)
}

// int32 robotCount = 2;
inline void ReadyToBattleReq::clear_robotcount() {
  robotcount_ = 0;
}
inline ::google::protobuf::int32 ReadyToBattleReq::robotcount() const {
  // @@protoc_insertion_point(field_get:ReadyToBattleReq.robotCount)
  return robotcount_;
}
inline void ReadyToBattleReq::set_robotcount(::google::protobuf::int32 value) {
  
  robotcount_ = value;
  // @@protoc_insertion_point(field_set:ReadyToBattleReq.robotCount)
}

// -------------------------------------------------------------------

// ReadyToBattleAck

// int32 retCode = 1;
inline void ReadyToBattleAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ReadyToBattleAck::retcode() const {
  // @@protoc_insertion_point(field_get:ReadyToBattleAck.retCode)
  return retcode_;
}
inline void ReadyToBattleAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:ReadyToBattleAck.retCode)
}

// repeated uint32 roleid = 2;
inline int ReadyToBattleAck::roleid_size() const {
  return roleid_.size();
}
inline void ReadyToBattleAck::clear_roleid() {
  roleid_.Clear();
}
inline ::google::protobuf::uint32 ReadyToBattleAck::roleid(int index) const {
  // @@protoc_insertion_point(field_get:ReadyToBattleAck.roleid)
  return roleid_.Get(index);
}
inline void ReadyToBattleAck::set_roleid(int index, ::google::protobuf::uint32 value) {
  roleid_.Set(index, value);
  // @@protoc_insertion_point(field_set:ReadyToBattleAck.roleid)
}
inline void ReadyToBattleAck::add_roleid(::google::protobuf::uint32 value) {
  roleid_.Add(value);
  // @@protoc_insertion_point(field_add:ReadyToBattleAck.roleid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReadyToBattleAck::roleid() const {
  // @@protoc_insertion_point(field_list:ReadyToBattleAck.roleid)
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReadyToBattleAck::mutable_roleid() {
  // @@protoc_insertion_point(field_mutable_list:ReadyToBattleAck.roleid)
  return &roleid_;
}

// -------------------------------------------------------------------

// Position

// float x = 1;
inline void Position::clear_x() {
  x_ = 0;
}
inline float Position::x() const {
  // @@protoc_insertion_point(field_get:Position.x)
  return x_;
}
inline void Position::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Position.x)
}

// float y = 2;
inline void Position::clear_y() {
  y_ = 0;
}
inline float Position::y() const {
  // @@protoc_insertion_point(field_get:Position.y)
  return y_;
}
inline void Position::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Position.y)
}

// float z = 3;
inline void Position::clear_z() {
  z_ = 0;
}
inline float Position::z() const {
  // @@protoc_insertion_point(field_get:Position.z)
  return z_;
}
inline void Position::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Position.z)
}

// -------------------------------------------------------------------

// FindPathReq

// .Position spos = 1;
inline bool FindPathReq::has_spos() const {
  return this != internal_default_instance() && spos_ != NULL;
}
inline void FindPathReq::clear_spos() {
  if (GetArenaNoVirtual() == NULL && spos_ != NULL) delete spos_;
  spos_ = NULL;
}
inline const ::Position& FindPathReq::spos() const {
  const ::Position* p = spos_;
  // @@protoc_insertion_point(field_get:FindPathReq.spos)
  return p != NULL ? *p : *reinterpret_cast<const ::Position*>(
      &::_Position_default_instance_);
}
inline ::Position* FindPathReq::mutable_spos() {
  
  if (spos_ == NULL) {
    spos_ = new ::Position;
  }
  // @@protoc_insertion_point(field_mutable:FindPathReq.spos)
  return spos_;
}
inline ::Position* FindPathReq::release_spos() {
  // @@protoc_insertion_point(field_release:FindPathReq.spos)
  
  ::Position* temp = spos_;
  spos_ = NULL;
  return temp;
}
inline void FindPathReq::set_allocated_spos(::Position* spos) {
  delete spos_;
  spos_ = spos;
  if (spos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:FindPathReq.spos)
}

// .Position epos = 2;
inline bool FindPathReq::has_epos() const {
  return this != internal_default_instance() && epos_ != NULL;
}
inline void FindPathReq::clear_epos() {
  if (GetArenaNoVirtual() == NULL && epos_ != NULL) delete epos_;
  epos_ = NULL;
}
inline const ::Position& FindPathReq::epos() const {
  const ::Position* p = epos_;
  // @@protoc_insertion_point(field_get:FindPathReq.epos)
  return p != NULL ? *p : *reinterpret_cast<const ::Position*>(
      &::_Position_default_instance_);
}
inline ::Position* FindPathReq::mutable_epos() {
  
  if (epos_ == NULL) {
    epos_ = new ::Position;
  }
  // @@protoc_insertion_point(field_mutable:FindPathReq.epos)
  return epos_;
}
inline ::Position* FindPathReq::release_epos() {
  // @@protoc_insertion_point(field_release:FindPathReq.epos)
  
  ::Position* temp = epos_;
  epos_ = NULL;
  return temp;
}
inline void FindPathReq::set_allocated_epos(::Position* epos) {
  delete epos_;
  epos_ = epos;
  if (epos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:FindPathReq.epos)
}

// -------------------------------------------------------------------

// FindPathAck

// int32 retCode = 1;
inline void FindPathAck::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 FindPathAck::retcode() const {
  // @@protoc_insertion_point(field_get:FindPathAck.retCode)
  return retcode_;
}
inline void FindPathAck::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:FindPathAck.retCode)
}

// repeated .Position paths = 2;
inline int FindPathAck::paths_size() const {
  return paths_.size();
}
inline void FindPathAck::clear_paths() {
  paths_.Clear();
}
inline const ::Position& FindPathAck::paths(int index) const {
  // @@protoc_insertion_point(field_get:FindPathAck.paths)
  return paths_.Get(index);
}
inline ::Position* FindPathAck::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:FindPathAck.paths)
  return paths_.Mutable(index);
}
inline ::Position* FindPathAck::add_paths() {
  // @@protoc_insertion_point(field_add:FindPathAck.paths)
  return paths_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Position >*
FindPathAck::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:FindPathAck.paths)
  return &paths_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Position >&
FindPathAck::paths() const {
  // @@protoc_insertion_point(field_list:FindPathAck.paths)
  return paths_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::BattleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BattleType>() {
  return ::BattleType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Msg_5fBattle_2eproto__INCLUDED
